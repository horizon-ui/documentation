{"pageProps":{"mdxSource":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(t,a,n)=>a in t?c(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))s.call(a,n)&&l(t,n,a[n]);if(i)for(var n of i(a))r.call(a,n)&&l(t,n,a[n]);return t},x=(t,a)=>d(t,h(a));var p=(t,a)=>{var n={};for(var o in t)s.call(t,o)&&a.indexOf(o)<0&&(n[o]=t[o]);if(t!=null&&i)for(var o of i(t))a.indexOf(o)<0&&r.call(t,o)&&(n[o]=t[o]);return n};const makeShortcode=t=>function(n){return console.warn(\"Component \"+t+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},n))},PropsTable=makeShortcode(\"PropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var o=n,{components:t}=o,a=p(o,[\"components\"]);return mdx(MDXLayout,x(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Text\"),` component is the used to render text and paragraphs within an interface.\nIt renders a `,mdx(\"inlineCode\",{parentName:\"p\"},\"<p>\"),\" tag by default.\"),mdx(\"h2\",e({},{id:\"import\"}),\"Import\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`import { Text } from \"@chakra-ui/react\"\n`)),mdx(\"h2\",e({},{id:\"changing-the-font-size\"}),\"Changing the font size\"),mdx(\"p\",null,\"To increase the font size of the text, you can pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"fontSize\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Stack spacing={3}>\n  <Text fontSize=\"6xl\">(6xl) In love with React & Next</Text>\n  <Text fontSize=\"5xl\">(5xl) In love with React & Next</Text>\n  <Text fontSize=\"4xl\">(4xl) In love with React & Next</Text>\n  <Text fontSize=\"3xl\">(3xl) In love with React & Next</Text>\n  <Text fontSize=\"2xl\">(2xl) In love with React & Next</Text>\n  <Text fontSize=\"xl\">(xl) In love with React & Next</Text>\n  <Text fontSize=\"lg\">(lg) In love with React & Next</Text>\n  <Text fontSize=\"md\">(md) In love with React & Next</Text>\n  <Text fontSize=\"sm\">(sm) In love with React & Next</Text>\n  <Text fontSize=\"xs\">(xs) In love with React & Next</Text>\n</Stack>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Stack spacing={3}>\n  <Text fontSize=\"6xl\">(6xl) In love with React & Next</Text>\n  <Text fontSize=\"5xl\">(5xl) In love with React & Next</Text>\n  <Text fontSize=\"4xl\">(4xl) In love with React & Next</Text>\n  <Text fontSize=\"3xl\">(3xl) In love with React & Next</Text>\n  <Text fontSize=\"2xl\">(2xl) In love with React & Next</Text>\n  <Text fontSize=\"xl\">(xl) In love with React & Next</Text>\n  <Text fontSize=\"lg\">(lg) In love with React & Next</Text>\n  <Text fontSize=\"md\">(md) In love with React & Next</Text>\n  <Text fontSize=\"sm\">(sm) In love with React & Next</Text>\n  <Text fontSize=\"xs\">(xs) In love with React & Next</Text>\n</Stack>\n`)),mdx(\"h3\",e({},{id:\"truncate-text\"}),\"Truncate text\"),mdx(\"p\",null,\"Pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"isTruncated\"),` prop to render an ellipsis when the text exceeds the\nwidth of the viewport or `,mdx(\"inlineCode\",{parentName:\"p\"},\"maxWidth\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Text color=\"gray.500\" isTruncated>\n  Lorem ipsum is placeholder text commonly used in the graphic, print, and\n  publishing industries for previewing layouts and visual mockups.\n</Text>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Text color=\"gray.500\" isTruncated>\n  Lorem ipsum is placeholder text commonly used in the graphic, print, and\n  publishing industries for previewing layouts and visual mockups.\n</Text>\n`)),mdx(\"p\",null,`Likewise, if you'd like to truncate the text after a specific number of lines,\npass the `,mdx(\"inlineCode\",{parentName:\"p\"},\"noOfLines\"),\" prop and set it to the desired no of lines.\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"Pro Tip \\u{1F4A1}: You can also apply \",mdx(\"inlineCode\",{parentName:\"p\"},\"noOfLines\"),\" responsively.\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"live=false\",live:\"false\"}),`// Basic version\n<Text noOfLines={2}>\n  \"The quick brown fox jumps over the lazy dog\" is an English-language pangram\\u2014a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n\n// Responsive version\n<Text noOfLines={[1, 2, 3]}>\n   \"The quick brown fox jumps over the lazy dog\" is an English-language pangram\\u2014a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"live=false\",live:\"false\"}),`// Basic version\n<Text noOfLines={2}>\n  \"The quick brown fox jumps over the lazy dog\" is an English-language pangram\\u2014a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n\n// Responsive version\n<Text noOfLines={[1, 2, 3]}>\n   \"The quick brown fox jumps over the lazy dog\" is an English-language pangram\\u2014a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n`)),mdx(\"h3\",e({},{id:\"override-style\"}),\"Override style\"),mdx(\"p\",null,`You can change the entire style of the text via props. For example, to change\nthe font size, pass the `,mdx(\"inlineCode\",{parentName:\"p\"},\"fontSize\"),\" prop. No need to write \",mdx(\"inlineCode\",{parentName:\"p\"},\"css\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"styled()\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Text fontSize=\"50px\" color=\"tomato\">\n  I'm using a custom font-size value for this text\n</Text>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Text fontSize=\"50px\" color=\"tomato\">\n  I'm using a custom font-size value for this text\n</Text>\n`)),mdx(\"h3\",e({},{id:\"override-the-element\"}),\"Override the element\"),mdx(\"p\",null,\"To override the element that gets rendered, pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"as\"),\" prop. Use \",mdx(\"strong\",{parentName:\"p\"},`Inspect\nElement`),\" to see the element that gets rendered in html.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<>\n  <Text as=\"i\">Italic</Text>\n  <br />\n  <Text as=\"u\">Underline</Text>\n  <br />\n  <Text as=\"abbr\">I18N</Text>\n  <br />\n  <Text as=\"cite\">Citation</Text>\n  <br />\n  <Text as=\"del\">Deleted</Text>\n  <br />\n  <Text as=\"em\">Emphasis</Text>\n  <br />\n  <Text as=\"ins\">Inserted</Text>\n  <br />\n  <Text as=\"kbd\">Ctrl + C</Text>\n  <br />\n  <Text as=\"mark\">Highlighted</Text>\n  <br />\n  <Text as=\"s\">Strikethrough</Text>\n  <br />\n  <Text as=\"samp\">Sample</Text>\n  <br />\n  <Text as=\"sub\">sub</Text>\n  <br />\n  <Text as=\"sup\">sup</Text>\n</>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<>\n  <Text as=\"i\">Italic</Text>\n  <br />\n  <Text as=\"u\">Underline</Text>\n  <br />\n  <Text as=\"abbr\">I18N</Text>\n  <br />\n  <Text as=\"cite\">Citation</Text>\n  <br />\n  <Text as=\"del\">Deleted</Text>\n  <br />\n  <Text as=\"em\">Emphasis</Text>\n  <br />\n  <Text as=\"ins\">Inserted</Text>\n  <br />\n  <Text as=\"kbd\">Ctrl + C</Text>\n  <br />\n  <Text as=\"mark\">Highlighted</Text>\n  <br />\n  <Text as=\"s\">Strikethrough</Text>\n  <br />\n  <Text as=\"samp\">Sample</Text>\n  <br />\n  <Text as=\"sub\">sub</Text>\n  <br />\n  <Text as=\"sup\">sup</Text>\n</>\n`)),mdx(\"h2\",e({},{id:\"props\"}),\"Props\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Text\"),\" composes the \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs-horizon-ui-dashboard/docs/layout/box\"}),\"Box\"),` component,\nso you can pass all `,mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),\" style props.\"),mdx(PropsTable,{of:\"Text\",omit:null,mdxType:\"PropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI Text - Horizon UI","package":"@chakra-ui/layout","description":"Text is the used to render text and paragraphs within an interface."}},"frontMatter":{"excerpt":"Text component is the used to render text and paragraphs within an interface.","readTimeMinutes":3,"mdxContent":"---\ntitle: Chakra UI Text - Horizon UI\npackage: \"@chakra-ui/layout\"\ndescription: Text is the used to render text and paragraphs within an interface.\n---\n\n`Text` component is the used to render text and paragraphs within an interface.\nIt renders a `<p>` tag by default.\n\n## Import\n\n```tsx\nimport { Text } from \"@chakra-ui/react\"\n```\n\n## Changing the font size\n\nTo increase the font size of the text, you can pass the `fontSize` prop.\n\n```jsx\n<Stack spacing={3}>\n  <Text fontSize=\"6xl\">(6xl) In love with React & Next</Text>\n  <Text fontSize=\"5xl\">(5xl) In love with React & Next</Text>\n  <Text fontSize=\"4xl\">(4xl) In love with React & Next</Text>\n  <Text fontSize=\"3xl\">(3xl) In love with React & Next</Text>\n  <Text fontSize=\"2xl\">(2xl) In love with React & Next</Text>\n  <Text fontSize=\"xl\">(xl) In love with React & Next</Text>\n  <Text fontSize=\"lg\">(lg) In love with React & Next</Text>\n  <Text fontSize=\"md\">(md) In love with React & Next</Text>\n  <Text fontSize=\"sm\">(sm) In love with React & Next</Text>\n  <Text fontSize=\"xs\">(xs) In love with React & Next</Text>\n</Stack>\n```\n\n```tsx\n<Stack spacing={3}>\n  <Text fontSize=\"6xl\">(6xl) In love with React & Next</Text>\n  <Text fontSize=\"5xl\">(5xl) In love with React & Next</Text>\n  <Text fontSize=\"4xl\">(4xl) In love with React & Next</Text>\n  <Text fontSize=\"3xl\">(3xl) In love with React & Next</Text>\n  <Text fontSize=\"2xl\">(2xl) In love with React & Next</Text>\n  <Text fontSize=\"xl\">(xl) In love with React & Next</Text>\n  <Text fontSize=\"lg\">(lg) In love with React & Next</Text>\n  <Text fontSize=\"md\">(md) In love with React & Next</Text>\n  <Text fontSize=\"sm\">(sm) In love with React & Next</Text>\n  <Text fontSize=\"xs\">(xs) In love with React & Next</Text>\n</Stack>\n```\n\n### Truncate text\n\nPass the `isTruncated` prop to render an ellipsis when the text exceeds the\nwidth of the viewport or `maxWidth` prop.\n\n```jsx\n<Text color=\"gray.500\" isTruncated>\n  Lorem ipsum is placeholder text commonly used in the graphic, print, and\n  publishing industries for previewing layouts and visual mockups.\n</Text>\n```\n\n```tsx\n<Text color=\"gray.500\" isTruncated>\n  Lorem ipsum is placeholder text commonly used in the graphic, print, and\n  publishing industries for previewing layouts and visual mockups.\n</Text>\n```\n\nLikewise, if you'd like to truncate the text after a specific number of lines,\npass the `noOfLines` prop and set it to the desired no of lines.\n\n> Pro Tip 💡: You can also apply `noOfLines` responsively.\n\n```jsx live=false\n// Basic version\n<Text noOfLines={2}>\n  \"The quick brown fox jumps over the lazy dog\" is an English-language pangram—a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n\n// Responsive version\n<Text noOfLines={[1, 2, 3]}>\n   \"The quick brown fox jumps over the lazy dog\" is an English-language pangram—a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n```\n\n```tsx live=false\n// Basic version\n<Text noOfLines={2}>\n  \"The quick brown fox jumps over the lazy dog\" is an English-language pangram—a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n\n// Responsive version\n<Text noOfLines={[1, 2, 3]}>\n   \"The quick brown fox jumps over the lazy dog\" is an English-language pangram—a\n  sentence that contains all of the letters of the English alphabet. Owing to\n  its existence, Chakra was created.\n</Text>\n```\n\n### Override style\n\nYou can change the entire style of the text via props. For example, to change\nthe font size, pass the `fontSize` prop. No need to write `css` or `styled()`.\n\n```jsx\n<Text fontSize=\"50px\" color=\"tomato\">\n  I'm using a custom font-size value for this text\n</Text>\n```\n\n```tsx\n<Text fontSize=\"50px\" color=\"tomato\">\n  I'm using a custom font-size value for this text\n</Text>\n```\n\n### Override the element\n\nTo override the element that gets rendered, pass the `as` prop. Use **Inspect\nElement** to see the element that gets rendered in html.\n\n```jsx\n<>\n  <Text as=\"i\">Italic</Text>\n  <br />\n  <Text as=\"u\">Underline</Text>\n  <br />\n  <Text as=\"abbr\">I18N</Text>\n  <br />\n  <Text as=\"cite\">Citation</Text>\n  <br />\n  <Text as=\"del\">Deleted</Text>\n  <br />\n  <Text as=\"em\">Emphasis</Text>\n  <br />\n  <Text as=\"ins\">Inserted</Text>\n  <br />\n  <Text as=\"kbd\">Ctrl + C</Text>\n  <br />\n  <Text as=\"mark\">Highlighted</Text>\n  <br />\n  <Text as=\"s\">Strikethrough</Text>\n  <br />\n  <Text as=\"samp\">Sample</Text>\n  <br />\n  <Text as=\"sub\">sub</Text>\n  <br />\n  <Text as=\"sup\">sup</Text>\n</>\n```\n\n```tsx\n<>\n  <Text as=\"i\">Italic</Text>\n  <br />\n  <Text as=\"u\">Underline</Text>\n  <br />\n  <Text as=\"abbr\">I18N</Text>\n  <br />\n  <Text as=\"cite\">Citation</Text>\n  <br />\n  <Text as=\"del\">Deleted</Text>\n  <br />\n  <Text as=\"em\">Emphasis</Text>\n  <br />\n  <Text as=\"ins\">Inserted</Text>\n  <br />\n  <Text as=\"kbd\">Ctrl + C</Text>\n  <br />\n  <Text as=\"mark\">Highlighted</Text>\n  <br />\n  <Text as=\"s\">Strikethrough</Text>\n  <br />\n  <Text as=\"samp\">Sample</Text>\n  <br />\n  <Text as=\"sub\">sub</Text>\n  <br />\n  <Text as=\"sup\">sup</Text>\n</>\n```\n\n## Props\n\n`Text` composes the [Box](/docs-horizon-ui-dashboard/docs/layout/box) component,\nso you can pass all `Box` style props.\n\n<PropsTable of=\"Text\" omit={null} />\n","title":"Chakra UI Text - Horizon UI","package":"@chakra-ui/layout","description":"Text is the used to render text and paragraphs within an interface.","slug":"/docs/typography/text","lastEdited":{"date":"April 02, 2022","author":"Simmmple"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Changing the font size","id":"changing-the-font-size","level":"h2"},{"text":"Truncate text","id":"truncate-text","level":"h3"},{"text":"Override style","id":"override-style","level":"h3"},{"text":"Override the element","id":"override-the-element","level":"h3"},{"text":"Props","id":"props","level":"h2"}],"editUrl":"https://github.com/simmmple-web/horizon-ui-dashboard/edit/main/website/pages/docs/typography/text.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}