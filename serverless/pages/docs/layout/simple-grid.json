{"pageProps":{"mdxSource":{"compiledSource":"var s=Object.defineProperty,h=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var m=(e,t,i)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,o=(e,t)=>{for(var i in t||(t={}))n.call(t,i)&&m(e,i,t[i]);if(p)for(var i of p(t))x.call(t,i)&&m(e,i,t[i]);return e},r=(e,t)=>h(e,l(t));var g=(e,t)=>{var i={};for(var a in e)n.call(e,a)&&t.indexOf(a)<0&&(i[a]=e[a]);if(e!=null&&p)for(var a of p(e))t.indexOf(a)<0&&x.call(e,a)&&(i[a]=e[a]);return i};const makeShortcode=e=>function(i){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",o({},i))},PropsTable=makeShortcode(\"PropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var a=i,{components:e}=a,t=g(a,[\"components\"]);return mdx(MDXLayout,r(o(o({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`If you're like me, you probably tend to check the\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\"}),\"MDN docs\"),` for\nanything CSS grid.`),mdx(\"p\",null,`SimpleGrid provides a friendly interface to create responsive grid layouts with\nease. It renders a `,mdx(\"inlineCode\",{parentName:\"p\"},\"div\"),\" element with \",mdx(\"inlineCode\",{parentName:\"p\"},\"display: grid\"),\".\"),mdx(\"h2\",o({},{id:\"import\"}),\"Import\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`import { SimpleGrid } from \"@chakra-ui/react\"\n`)),mdx(\"h2\",o({},{id:\"usage\"}),\"Usage\"),mdx(\"p\",null,\"Specifying the number of columns for the grid layout.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"p\",null,`You can also make it responsive by passing array or object values into the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"columns\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`// Passing \\`columns={[2, null, 3]}\\` and \\`columns={{sm: 2, md: 3}}\\`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`// Passing \\`columns={[2, null, 3]}\\` and \\`columns={{sm: 2, md: 3}}\\`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"h3\",o({},{id:\"auto-responsive-grid\"}),\"Auto-responsive grid\"),mdx(\"p\",null,\"To make the grid responsive and adjust automatically without passing \",mdx(\"inlineCode\",{parentName:\"p\"},\"columns\"),`,\nsimply pass the `,mdx(\"inlineCode\",{parentName:\"p\"},\"minChildWidth\"),\" prop to specify the \",mdx(\"inlineCode\",{parentName:\"p\"},\"min-width\"),` a child should\nhave before adjusting the layout.`),mdx(\"p\",null,\"This uses css grid \",mdx(\"inlineCode\",{parentName:\"p\"},\"auto-fit\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"minmax()\"),\" internally.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`<SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"h3\",o({},{id:\"changing-the-spacing-for-columns-and-rows\"}),\"Changing the spacing for columns and rows\"),mdx(\"p\",null,\"Simply pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"spacing\"),` prop to change the row and column spacing between the\ngrid items. `,mdx(\"inlineCode\",{parentName:\"p\"},\"SimpleGrid\"),\" also allows you pass \",mdx(\"inlineCode\",{parentName:\"p\"},\"spacingX\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"spacingY\"),` to\ndefine the space between columns and rows respectively.`),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`<SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`)),mdx(\"h2\",o({},{id:\"props\"}),\"Props\"),mdx(\"p\",null,\"SimpleGrid composes \",mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),\" so you can pass all the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),` props and css grid props\nwith addition of these:`),mdx(PropsTable,{of:\"SimpleGrid\",mdxType:\"PropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI SimpleGrid - Horizon UI","package":"@chakra-ui/layout","description":"Grid is Box with display set to grid and comes with helpful style shorthand. It renders a `div` element."}},"frontMatter":{"excerpt":"If you're like me, you probably tend to check the","readTimeMinutes":2,"mdxContent":"---\ntitle: Chakra UI SimpleGrid - Horizon UI\npackage: \"@chakra-ui/layout\"\ndescription:\n  Grid is Box with display set to grid and comes with helpful style shorthand.\n  It renders a `div` element.\n---\n\nIf you're like me, you probably tend to check the\n[MDN docs](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout) for\nanything CSS grid.\n\nSimpleGrid provides a friendly interface to create responsive grid layouts with\nease. It renders a `div` element with `display: grid`.\n\n## Import\n\n```tsx\nimport { SimpleGrid } from \"@chakra-ui/react\"\n```\n\n## Usage\n\nSpecifying the number of columns for the grid layout.\n\n```jsx\n<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n```tsx\n<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\nYou can also make it responsive by passing array or object values into the\n`columns` prop.\n\n```jsx\n// Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n```tsx\n// Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n### Auto-responsive grid\n\nTo make the grid responsive and adjust automatically without passing `columns`,\nsimply pass the `minChildWidth` prop to specify the `min-width` a child should\nhave before adjusting the layout.\n\nThis uses css grid `auto-fit` and `minmax()` internally.\n\n```jsx\n<SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n```tsx\n<SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n### Changing the spacing for columns and rows\n\nSimply pass the `spacing` prop to change the row and column spacing between the\ngrid items. `SimpleGrid` also allows you pass `spacingX` and `spacingY` to\ndefine the space between columns and rows respectively.\n\n```jsx\n<SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n```tsx\n<SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n```\n\n## Props\n\nSimpleGrid composes `Box` so you can pass all the `Box` props and css grid props\nwith addition of these:\n\n<PropsTable of=\"SimpleGrid\" />\n","title":"Chakra UI SimpleGrid - Horizon UI","package":"@chakra-ui/layout","description":"Grid is Box with display set to grid and comes with helpful style shorthand. It renders a `div` element.","slug":"/docs/layout/simple-grid","lastEdited":{"date":"April 02, 2022","author":"Simmmple"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Usage","id":"usage","level":"h2"},{"text":"Auto-responsive grid","id":"auto-responsive-grid","level":"h3"},{"text":"Changing the spacing for columns and rows","id":"changing-the-spacing-for-columns-and-rows","level":"h3"},{"text":"Props","id":"props","level":"h2"}],"editUrl":"https://github.com/simmmple-web/horizon-ui-dashboard/edit/main/website/pages/docs/layout/simple-grid.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}