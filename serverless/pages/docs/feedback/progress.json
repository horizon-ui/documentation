{"pageProps":{"mdxSource":{"compiledSource":"var g=Object.defineProperty,d=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var t=(r,a,s)=>a in r?g(r,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[a]=s,e=(r,a)=>{for(var s in a||(a={}))i.call(a,s)&&t(r,s,a[s]);if(n)for(var s of n(a))p.call(a,s)&&t(r,s,a[s]);return r},l=(r,a)=>d(r,m(a));var c=(r,a)=>{var s={};for(var o in r)i.call(r,o)&&a.indexOf(o)<0&&(s[o]=r[o]);if(r!=null&&n)for(var o of n(r))a.indexOf(o)<0&&p.call(r,o)&&(s[o]=r[o]);return s};const makeShortcode=r=>function(s){return console.warn(\"Component \"+r+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},s))},PropsTable=makeShortcode(\"PropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var o=s,{components:r}=o,a=c(o,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),a),{components:r,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Progress\"),` is used to display the progress status for a task that takes a long\ntime or consists of several steps.`),mdx(\"h2\",e({},{id:\"import\"}),\"Import\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`import { Progress } from \"@chakra-ui/react\"\n`)),mdx(\"h2\",e({},{id:\"usage\"}),\"Usage\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Progress value={80} />\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Progress value={80} />\n`)),mdx(\"h3\",e({},{id:\"progress-with-stripe\"}),\"Progress with Stripe\"),mdx(\"p\",null,\"You can add \",mdx(\"inlineCode\",{parentName:\"p\"},\"hasStripe\"),` prop to any progress bar to apply a stripe via a CSS\ngradient over the progress bar\\u2019s background color.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Progress hasStripe value={64} />\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Progress hasStripe value={64} />\n`)),mdx(\"h3\",e({},{id:\"progress-sizes\"}),\"Progress sizes\"),mdx(\"p\",null,\"There are two ways you can increase the height of the progress bar:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"You can add \",mdx(\"inlineCode\",{parentName:\"li\"},\"size\"),\" prop to increase the height of the progress bar.\"),mdx(\"li\",{parentName:\"ul\"},\"You can also use the \",mdx(\"inlineCode\",{parentName:\"li\"},\"height\"),\" prop to manually set a height.\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Stack spacing={5}>\n  <Progress colorScheme=\"green\" size=\"sm\" value={20} />\n  <Progress colorScheme=\"green\" size=\"md\" value={20} />\n  <Progress colorScheme=\"green\" size=\"lg\" value={20} />\n  <Progress colorScheme=\"green\" height=\"32px\" value={20} />\n</Stack>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Stack spacing={5}>\n  <Progress colorScheme=\"green\" size=\"sm\" value={20} />\n  <Progress colorScheme=\"green\" size=\"md\" value={20} />\n  <Progress colorScheme=\"green\" size=\"lg\" value={20} />\n  <Progress colorScheme=\"green\" height=\"32px\" value={20} />\n</Stack>\n`)),mdx(\"h3\",e({},{id:\"progress-color-scheme\"}),\"Progress color scheme\"),mdx(\"p\",null,\"You can add \",mdx(\"inlineCode\",{parentName:\"p\"},\"colorScheme\"),` prop to any progress bar to apply any color that\nexists in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"theme\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Progress value={20} size=\"xs\" colorScheme=\"pink\" />\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Progress value={20} size=\"xs\" colorScheme=\"pink\" />\n`)),mdx(\"h3\",e({},{id:\"animated-progress\"}),\"Animated Progress\"),mdx(\"p\",null,\"To show an animated progress, pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"isIndeterminate\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Progress size=\"xs\" isIndeterminate />\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Progress size=\"xs\" isIndeterminate />\n`)),mdx(\"h2\",e({},{id:\"accessibility\"}),\"Accessibility\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"Progress\"),\" has a \",mdx(\"inlineCode\",{parentName:\"li\"},\"role\"),\" set to \",mdx(\"inlineCode\",{parentName:\"li\"},\"progressbar\"),\" to denote that it is a progress.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"Progress\"),\" has \",mdx(\"inlineCode\",{parentName:\"li\"},\"aria-valuenow\"),` set to the percentage completion value passed\nto the component, to ensure the progress percent is visible to screen readers.`)),mdx(\"h2\",e({},{id:\"props\"}),\"Props\"),mdx(PropsTable,{of:\"Progress\",mdxType:\"PropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI Progress - Horizon UI","package":"@chakra-ui/progress","image":"components/progress.svg","description":"Progress is used to display the progress status for a task that takes a long time or consists of several steps."}},"frontMatter":{"excerpt":"Progress is used to display the progress status for a task that takes a long","readTimeMinutes":1,"mdxContent":"---\ntitle: Chakra UI Progress - Horizon UI\npackage: \"@chakra-ui/progress\"\nimage: \"components/progress.svg\"\ndescription:\n  Progress is used to display the progress status for a task that takes a long\n  time or consists of several steps.\n---\n\n`Progress` is used to display the progress status for a task that takes a long\ntime or consists of several steps.\n\n## Import\n\n```tsx\nimport { Progress } from \"@chakra-ui/react\"\n```\n\n## Usage\n\n```jsx\n<Progress value={80} />\n```\n\n```tsx\n<Progress value={80} />\n```\n\n### Progress with Stripe\n\nYou can add `hasStripe` prop to any progress bar to apply a stripe via a CSS\ngradient over the progress barâ€™s background color.\n\n```jsx\n<Progress hasStripe value={64} />\n```\n\n```tsx\n<Progress hasStripe value={64} />\n```\n\n### Progress sizes\n\nThere are two ways you can increase the height of the progress bar:\n\n- You can add `size` prop to increase the height of the progress bar.\n- You can also use the `height` prop to manually set a height.\n\n```jsx\n<Stack spacing={5}>\n  <Progress colorScheme=\"green\" size=\"sm\" value={20} />\n  <Progress colorScheme=\"green\" size=\"md\" value={20} />\n  <Progress colorScheme=\"green\" size=\"lg\" value={20} />\n  <Progress colorScheme=\"green\" height=\"32px\" value={20} />\n</Stack>\n```\n\n```tsx\n<Stack spacing={5}>\n  <Progress colorScheme=\"green\" size=\"sm\" value={20} />\n  <Progress colorScheme=\"green\" size=\"md\" value={20} />\n  <Progress colorScheme=\"green\" size=\"lg\" value={20} />\n  <Progress colorScheme=\"green\" height=\"32px\" value={20} />\n</Stack>\n```\n\n### Progress color scheme\n\nYou can add `colorScheme` prop to any progress bar to apply any color that\nexists in the `theme`.\n\n```jsx\n<Progress value={20} size=\"xs\" colorScheme=\"pink\" />\n```\n\n```tsx\n<Progress value={20} size=\"xs\" colorScheme=\"pink\" />\n```\n\n### Animated Progress\n\nTo show an animated progress, pass the `isIndeterminate` prop.\n\n```jsx\n<Progress size=\"xs\" isIndeterminate />\n```\n\n```tsx\n<Progress size=\"xs\" isIndeterminate />\n```\n\n## Accessibility\n\n- `Progress` has a `role` set to `progressbar` to denote that it is a progress.\n- `Progress` has `aria-valuenow` set to the percentage completion value passed\n  to the component, to ensure the progress percent is visible to screen readers.\n\n## Props\n\n<PropsTable of=\"Progress\" />\n","title":"Chakra UI Progress - Horizon UI","package":"@chakra-ui/progress","image":"components/progress.svg","description":"Progress is used to display the progress status for a task that takes a long time or consists of several steps.","slug":"/docs/feedback/progress","lastEdited":{"date":"April 02, 2022","author":"Simmmple"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Usage","id":"usage","level":"h2"},{"text":"Progress with Stripe","id":"progress-with-stripe","level":"h3"},{"text":"Progress sizes","id":"progress-sizes","level":"h3"},{"text":"Progress color scheme","id":"progress-color-scheme","level":"h3"},{"text":"Animated Progress","id":"animated-progress","level":"h3"},{"text":"Accessibility","id":"accessibility","level":"h2"},{"text":"Props","id":"props","level":"h2"}],"editUrl":"https://github.com/simmmple-web/horizon-ui-dashboard/edit/main/website/pages/docs/feedback/progress.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}