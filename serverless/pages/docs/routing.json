{"pageProps":{"mdxSource":{"compiledSource":"var s=Object.defineProperty,u=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var t=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var d=(e,n,i)=>n in e?s(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,o=(e,n)=>{for(var i in n||(n={}))r.call(n,i)&&d(e,i,n[i]);if(t)for(var i of t(n))l.call(n,i)&&d(e,i,n[i]);return e},p=(e,n)=>u(e,h(n));var m=(e,n)=>{var i={};for(var a in e)r.call(e,a)&&n.indexOf(a)<0&&(i[a]=e[a]);if(e!=null&&t)for(var a of t(e))n.indexOf(a)<0&&l.call(e,a)&&(i[a]=e[a]);return i};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var a=i,{components:e}=a,n=m(a,[\"components\"]);return mdx(MDXLayout,p(o(o({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`We've created these dynamic routes, so we wouldn't have to write them in two\nplaces. On place would have been inside our `,mdx(\"inlineCode\",{parentName:\"p\"},\"Sidebar\"),` and the onther one would\nbe either the `,mdx(\"inlineCode\",{parentName:\"p\"},\"src/RTL.js\"),\" layout or the \",mdx(\"inlineCode\",{parentName:\"p\"},\"src/Admin.js\"),`layout. You will find all\nour demo routes in `,mdx(\"inlineCode\",{parentName:\"p\"},\"src/routes.js\")),mdx(\"p\",null,`Please note that these are just demo routes. You can delete them and create your\nown routing system, or you can easily replace them with normal\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://reacttraining.com/react-router/web/api/Route?ref=horizon-documentation\"}),\"Routes\"),`\nand\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://reacttraining.com/react-router/web/api/Link?ref=horizon-documentation\"}),\"Links\"),`\nor\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://reacttraining.com/react-router/web/api/NavLink?ref=horizon-documentation\"}),\"NavLinks\"),`\nfrom\n`,mdx(\"a\",o({parentName:\"p\"},{href:\"https://reacttraining.com/react-router/web/example/basic?ref=horizon-documentation\"}),\"react-router-dom\"),`.\nIf you do not understand them, please take in consideration replacing them with\nnormal routes and use the `,mdx(\"inlineCode\",{parentName:\"p\"},\"src/routes.js\"),` just for rendering Links inside the\nSidebar component.`),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-tsx\"}),`{ path: \"/path/name\", name: \"Name Of the View\", rtlName: \"\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0639\\u0631\\u0636\", icon: <Icon />, component: ViewComponent, layout: \"/layout-path\" },\n`)),mdx(\"h2\",o({},{id:\"legend\"}),\"Legend\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"path\"),` (path for your route - this will be seen in the browser url input -\nexample `,mdx(\"inlineCode\",{parentName:\"li\"},\"/dashboard\"),\")\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"name\"),\"(name of your route - this will appear in the \",mdx(\"inlineCode\",{parentName:\"li\"},\"Sidebar\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"Navbar\"),`\ncomponents - example `,mdx(\"inlineCode\",{parentName:\"li\"},\"Dashboard\"),\")\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"rtlName\"),\" (name of your route - this will appear in the \",mdx(\"inlineCode\",{parentName:\"li\"},\"Sidebar\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"Navbar\"),`\ncomponents - example `,mdx(\"inlineCode\",{parentName:\"li\"},\"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u0642\\u064A\\u0627\\u062F\\u0629\"),\" if \",mdx(\"inlineCode\",{parentName:\"li\"},\"rtlActive\"),` prop is set on the\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"Sidebar\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"Navbar\"),\" components)\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"icon\"),\" (icon to be displayed alongside with links in \",mdx(\"inlineCode\",{parentName:\"li\"},\"Sidebar\"),` component -\nexample `,mdx(\"inlineCode\",{parentName:\"li\"},'<DocumentIcon color=\"inherit\" />'),\")\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"component\"),` (this is the View component that you want to be displayed on the\nspecified route - example `,mdx(\"inlineCode\",{parentName:\"li\"},\"Dashboard\"),\")\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"layout\"),` (path of the layout in which the View component you want to be\nrendered - in our template demo you only have to options: `,mdx(\"inlineCode\",{parentName:\"li\"},\"/admin\"),` and\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"/rtl\"),` - but due to this routing system you can add more, for example\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"/new-layout\"),\")\")),mdx(\"p\",null,`For a better understanding, please take a look inside the file at hand, and also\nhow the routes are rendered while the app si opened.`),mdx(\"h2\",o({},{id:\"notice\"}),\"Notice\"),mdx(\"p\",null,`Because our routes are arrays of objects, and each route is an object, you can\nadd what props you want in our routes and do what you want with them.`))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Routing","description":"Routing path system"}},"frontMatter":{"excerpt":"We've created these dynamic routes, so we wouldn't have to write them in two","readTimeMinutes":2,"mdxContent":"---\ntitle: Routing\ndescription: Routing path system\n---\n\nWe've created these dynamic routes, so we wouldn't have to write them in two\nplaces. On place would have been inside our `Sidebar` and the onther one would\nbe either the `src/RTL.js` layout or the `src/Admin.js`layout. You will find all\nour demo routes in `src/routes.js`\n\nPlease note that these are just demo routes. You can delete them and create your\nown routing system, or you can easily replace them with normal\n[Routes](https://reacttraining.com/react-router/web/api/Route?ref=horizon-documentation)\nand\n[Links](https://reacttraining.com/react-router/web/api/Link?ref=horizon-documentation)\nor\n[NavLinks](https://reacttraining.com/react-router/web/api/NavLink?ref=horizon-documentation)\nfrom\n[react-router-dom](https://reacttraining.com/react-router/web/example/basic?ref=horizon-documentation).\nIf you do not understand them, please take in consideration replacing them with\nnormal routes and use the `src/routes.js` just for rendering Links inside the\nSidebar component.\n\n```tsx\n{ path: \"/path/name\", name: \"Name Of the View\", rtlName: \"اسم العرض\", icon: <Icon />, component: ViewComponent, layout: \"/layout-path\" },\n```\n\n## Legend\n\n- `path` (path for your route - this will be seen in the browser url input -\n  example `/dashboard`)\n- `name`(name of your route - this will appear in the `Sidebar` and `Navbar`\n  components - example `Dashboard`)\n- `rtlName` (name of your route - this will appear in the `Sidebar` and `Navbar`\n  components - example `لوحة القيادة` if `rtlActive` prop is set on the\n  `Sidebar` and `Navbar` components)\n- `icon` (icon to be displayed alongside with links in `Sidebar` component -\n  example `<DocumentIcon color=\"inherit\" />`)\n- `component` (this is the View component that you want to be displayed on the\n  specified route - example `Dashboard`)\n- `layout` (path of the layout in which the View component you want to be\n  rendered - in our template demo you only have to options: `/admin` and\n  `/rtl` - but due to this routing system you can add more, for example\n  `/new-layout`)\n\nFor a better understanding, please take a look inside the file at hand, and also\nhow the routes are rendered while the app si opened.\n\n## Notice\n\nBecause our routes are arrays of objects, and each route is an object, you can\nadd what props you want in our routes and do what you want with them.\n","title":"Routing","description":"Routing path system","slug":"/docs/routing","lastEdited":{"date":"March 28, 2022","author":"Simmmple"},"headings":[{"text":"Legend","id":"legend","level":"h2"},{"text":"Notice","id":"notice","level":"h2"}],"editUrl":"https://github.com/simmmple-web/horizon-ui-dashboard/edit/main/website/pages/docs/routing.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}