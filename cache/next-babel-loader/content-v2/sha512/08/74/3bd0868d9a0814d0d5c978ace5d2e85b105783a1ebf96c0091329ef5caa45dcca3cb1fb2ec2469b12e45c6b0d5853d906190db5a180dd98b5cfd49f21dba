{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { useScrollSpy } from \"hooks/use-scrollspy\";\nimport { Box, ListItem, OrderedList, chakra, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction TableOfContent(props) {\n  const {\n    headings\n  } = props,\n        rest = _objectWithoutProperties(props, [\"headings\"]);\n\n  const activeId = useScrollSpy(headings.map(({\n    id\n  }) => `[id=\"${id}\"]`), {\n    rootMargin: \"0% 0% -24% 0%\"\n  });\n  return __jsx(Box, _extends({\n    as: \"nav\",\n    \"aria-labelledby\": \"toc-title\",\n    width: \"16rem\",\n    flexShrink: 0,\n    display: {\n      base: \"none\",\n      xl: \"block\"\n    },\n    position: \"sticky\",\n    py: \"10\",\n    pr: \"4\",\n    top: \"6rem\",\n    right: \"0\",\n    fontSize: \"sm\",\n    alignSelf: \"start\",\n    maxHeight: \"calc(100vh - 8rem)\",\n    overflowY: \"auto\",\n    sx: {\n      overscrollBehavior: \"contain\"\n    }\n  }, rest), __jsx(Text, {\n    as: \"h2\",\n    id: \"toc-title\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    fontSize: \"xs\",\n    color: useColorModeValue(\"gray.700\", \"gray.400\"),\n    letterSpacing: \"wide\"\n  }, \"On this page\"), __jsx(OrderedList, {\n    spacing: 1,\n    ml: \"0\",\n    mt: \"4\",\n    styleType: \"none\"\n  }, headings.map(({\n    id,\n    text,\n    level\n  }) => __jsx(ListItem, {\n    key: id,\n    title: text,\n    ml: level === \"h3\" ? \"4\" : undefined\n  }, __jsx(chakra.a, {\n    py: \"1\",\n    display: \"block\",\n    fontWeight: id === activeId ? \"bold\" : \"medium\",\n    href: `#${id}`,\n    \"aria-current\": id === activeId ? \"location\" : undefined,\n    color: useColorModeValue(\"gray.600\", \"white\"),\n    _hover: {\n      color: useColorModeValue(\"gray.900\", \"white\")\n    }\n  }, text)))));\n}\n\nexport default TableOfContent;","map":null,"metadata":{},"sourceType":"module"}