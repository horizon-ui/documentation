{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/sidebar/sidebar-category.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nfunction SidebarCategory(props) {\n  _s();\n\n  var isMobile = props.isMobile,\n      title = props.title,\n      selected = props.selected,\n      opened = props.opened,\n      children = props.children,\n      contentRef = props.contentRef,\n      rest = _objectWithoutProperties(props, [\"isMobile\", \"title\", \"selected\", \"opened\", \"children\", \"contentRef\"]);\n\n  var ref = useRef(null);\n\n  var _useState = useState({\n    toggle: selected || opened\n  }),\n      _useState$ = _useState[0],\n      toggle = _useState$.toggle,\n      _useState$$shouldScro = _useState$.shouldScroll,\n      shouldScroll = _useState$$shouldScro === void 0 ? false : _useState$$shouldScro,\n      setToggle = _useState[1]; // const onClick = () => {\n  //   setToggle({ toggle: !toggle, shouldScroll: true })\n  // }\n  // If a category is selected indirectly, open it. This can happen when using the search input\n\n\n  useEffect(function () {\n    if (selected) {\n      setToggle({\n        toggle: true,\n        shouldScroll: true\n      });\n    }\n  }, [selected]); // Navigate to the start of the category when manually opened\n\n  useEffect(function () {\n    if (!ref.current || !(contentRef !== null && contentRef !== void 0 && contentRef.current)) return;\n\n    if (toggle && shouldScroll) {\n      var contentEl = contentRef.current;\n\n      if (toggle == true && contentEl) {\n        // 10 is added for better margin\n        var height = ref.current.offsetTop - (isMobile ? 10 : contentEl.offsetTop);\n        contentEl.scrollTop = height;\n        setToggle({\n          toggle: toggle\n        });\n      }\n    }\n  }, [toggle, shouldScroll, isMobile, contentRef]);\n  return __jsx(chakra.div, _extends({\n    mt: \"8\",\n    ref: ref\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), __jsx(chakra.p, {\n    width: \"full\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"wider\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    userSelect: \"none\",\n    color: useColorModeValue(\"gray.500\", \"inherit\") // onClick={onClick}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, title), __jsx(chakra.div, {\n    role: \"group\",\n    hidden: !toggle,\n    mt: \"16px\",\n    mx: \"-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_s(SidebarCategory, \"W7NGX9zNow2eBtK2jMoHbpp3fMc=\", false, function () {\n  return [useColorModeValue];\n});\n\n_c = SidebarCategory;\nexport default SidebarCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarCategory\");","map":{"version":3,"sources":["/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/sidebar/sidebar-category.tsx"],"names":["chakra","useColorModeValue","useEffect","useRef","useState","SidebarCategory","props","isMobile","title","selected","opened","children","contentRef","rest","ref","toggle","shouldScroll","setToggle","current","contentEl","height","offsetTop","scrollTop"],"mappings":"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","sourcesContent":["import { BoxProps, chakra, useColorModeValue } from \"@chakra-ui/react\"\nimport { ReactNode, RefObject, useEffect, useRef, useState } from \"react\"\n\ninterface SidebarCategoryProps extends BoxProps {\n  isMobile?: boolean\n  title: string\n  opened?: boolean\n  selected?: boolean\n  children: ReactNode\n  contentRef?: RefObject<any>\n}\n\ninterface SidebarState {\n  toggle?: boolean\n  shouldScroll?: boolean\n}\n\nfunction SidebarCategory(props: SidebarCategoryProps) {\n  const {\n    isMobile,\n    title,\n    selected,\n    opened,\n    children,\n    contentRef,\n    ...rest\n  } = props\n\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const [{ toggle, shouldScroll = false }, setToggle] = useState<SidebarState>({\n    toggle: selected || opened,\n  })\n\n  // const onClick = () => {\n  //   setToggle({ toggle: !toggle, shouldScroll: true })\n  // }\n\n  // If a category is selected indirectly, open it. This can happen when using the search input\n  useEffect(() => {\n    if (selected) {\n      setToggle({ toggle: true, shouldScroll: true })\n    }\n  }, [selected])\n\n  // Navigate to the start of the category when manually opened\n  useEffect(() => {\n    if (!ref.current || !contentRef?.current) return\n    if (toggle && shouldScroll) {\n      const contentEl = contentRef.current\n\n      if (toggle == true && contentEl) {\n        // 10 is added for better margin\n        const height =\n          ref.current.offsetTop - (isMobile ? 10 : contentEl.offsetTop)\n        contentEl.scrollTop = height\n        setToggle({ toggle })\n      }\n    }\n  }, [toggle, shouldScroll, isMobile, contentRef])\n\n  return (\n    <chakra.div mt=\"8\" ref={ref} {...rest}>\n      <chakra.p\n        width=\"full\"\n        textTransform=\"uppercase\"\n        letterSpacing=\"wider\"\n        fontSize=\"xs\"\n        fontWeight=\"bold\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        userSelect=\"none\"\n        color={useColorModeValue(\"gray.500\", \"inherit\")}\n        // onClick={onClick}\n      >\n        {title}\n      </chakra.p>\n      <chakra.div role=\"group\" hidden={!toggle} mt=\"16px\" mx=\"-3\">\n        {children}\n      </chakra.div>\n    </chakra.div>\n  )\n}\n\nexport default SidebarCategory\n"]},"metadata":{},"sourceType":"module"}