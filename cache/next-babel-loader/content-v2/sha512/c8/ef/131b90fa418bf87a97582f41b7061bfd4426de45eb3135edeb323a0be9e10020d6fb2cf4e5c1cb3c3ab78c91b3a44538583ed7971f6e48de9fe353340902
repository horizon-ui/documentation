{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\nexport function useScrollSpy(selectors, options) {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeId = _React$useState2[0],\n      setActiveId = _React$useState2[1];\n\n  var observer = React.useRef();\n  React.useEffect(function () {\n    var elements = selectors.map(function (selector) {\n      return document.querySelector(selector);\n    });\n\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    observer.current = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (entry !== null && entry !== void 0 && entry.isIntersecting) {\n          setActiveId(entry.target.getAttribute(\"id\"));\n        }\n      });\n    }, options);\n    elements.forEach(function (el) {\n      return observer.current.observe(el);\n    });\n    return function () {\n      return observer.current.disconnect();\n    };\n  }, [selectors]);\n  return activeId;\n}","map":null,"metadata":{},"sourceType":"module"}