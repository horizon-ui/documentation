{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/color-palette.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex, Grid, useTheme } from \"@chakra-ui/react\";\nimport React from \"react\";\nexport var ColorPalette = function ColorPalette(props) {\n  _s();\n\n  var color = props.color,\n      name = props.name,\n      rest = _objectWithoutProperties(props, [\"color\", \"name\"]);\n\n  var theme = useTheme();\n  var colorCode = color;\n\n  var _color$split = color.split(\".\"),\n      _color$split2 = _slicedToArray(_color$split, 2),\n      shade = _color$split2[0],\n      hue = _color$split2[1];\n\n  if (shade && hue) {\n    colorCode = theme.colors[shade][hue];\n  }\n\n  if (color in theme.colors && typeof theme.colors[color] === \"string\") {\n    colorCode = theme.colors[color];\n  }\n\n  return __jsx(Flex, _extends({\n    align: \"center\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    borderRadius: \"md\",\n    boxSize: \"3rem\",\n    boxShadow: \"inner\",\n    mr: 3,\n    bg: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    fontSize: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    fontWeight: \"semibold\",\n    textTransform: \"capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, name), __jsx(Box, {\n    textTransform: \"uppercase\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, colorCode)));\n};\n\n_s(ColorPalette, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = ColorPalette;\nexport var ColorPalettes = function ColorPalettes(props) {\n  _s2();\n\n  var color = props.color;\n  var theme = useTheme();\n  var keys = Object.keys(theme.colors[color]);\n  return keys.map(function (item) {\n    return __jsx(ColorPalette, {\n      key: \"\".concat(color, \".\").concat(item),\n      color: \"\".concat(color, \".\").concat(item),\n      name: \"\".concat(color, \" \").concat(item),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    });\n  });\n};\n\n_s2(ColorPalettes, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = ColorPalettes;\nexport var ColorWrapper = function ColorWrapper(props) {\n  return __jsx(Grid, _extends({\n    mt: 7,\n    gap: 6,\n    templateColumns: \"repeat( auto-fit, minmax(200px, 1fr) )\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }));\n};\n_c3 = ColorWrapper;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ColorPalette\");\n$RefreshReg$(_c2, \"ColorPalettes\");\n$RefreshReg$(_c3, \"ColorWrapper\");","map":{"version":3,"sources":["/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/color-palette.tsx"],"names":["Box","Flex","Grid","useTheme","React","ColorPalette","props","color","name","rest","theme","colorCode","split","shade","hue","colors","ColorPalettes","keys","Object","map","item","ColorWrapper"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  FlexProps,\n  Grid,\n  GridProps,\n  useTheme,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype ColorPaletteProps = FlexProps & { color?: string; name?: string }\n\nexport const ColorPalette = (props: ColorPaletteProps) => {\n  const { color, name, ...rest } = props\n\n  const theme = useTheme()\n  let colorCode = color\n  const [shade, hue] = color.split(\".\")\n\n  if (shade && hue) {\n    colorCode = theme.colors[shade][hue]\n  }\n\n  if (color in theme.colors && typeof theme.colors[color] === \"string\") {\n    colorCode = theme.colors[color]\n  }\n\n  return (\n    <Flex align=\"center\" {...rest}>\n      <Box\n        borderRadius=\"md\"\n        boxSize=\"3rem\"\n        boxShadow=\"inner\"\n        mr={3}\n        bg={color}\n      />\n      <Box fontSize=\"sm\">\n        <Box fontWeight=\"semibold\" textTransform=\"capitalize\">\n          {name}\n        </Box>\n        <Box textTransform=\"uppercase\">{colorCode}</Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport const ColorPalettes = (props: { color: string }) => {\n  const { color } = props\n  const theme = useTheme()\n  const keys = Object.keys(theme.colors[color])\n\n  return keys.map((item) => (\n    <ColorPalette\n      key={`${color}.${item}`}\n      color={`${color}.${item}`}\n      name={`${color} ${item}`}\n    />\n  ))\n}\n\nexport const ColorWrapper: React.FC<GridProps> = (props) => (\n  <Grid\n    mt={7}\n    gap={6}\n    templateColumns=\"repeat( auto-fit, minmax(200px, 1fr) )\"\n    {...props}\n  />\n)\n"]},"metadata":{},"sourceType":"module"}