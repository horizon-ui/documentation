{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Icon, Text, HStack, Wrap, Link, useColorModeValue, WrapItem } from \"@chakra-ui/react\";\nimport { FaNpm, FaGithub } from \"react-icons/fa\";\nimport StorybookIcon from \"../storybook-icon\";\n\nfunction ComponentLink(props) {\n  const {\n    icon,\n    url,\n    children,\n    iconSize,\n    iconColor\n  } = props,\n        rest = _objectWithoutProperties(props, [\"icon\", \"url\", \"children\", \"iconSize\", \"iconColor\"]);\n\n  return __jsx(Link, _extends({\n    href: url,\n    isExternal: true,\n    px: \"12px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    minH: \"32px\",\n    borderWidth: \"1px\",\n    borderRadius: \"md\",\n    color: useColorModeValue(\"gray.600\", \"whiteAlpha.700\"),\n    _hover: {\n      color: useColorModeValue(\"gray.700\", \"whiteAlpha.900\"),\n      boxShadow: \"sm\",\n      transform: \"translateY(-1px)\"\n    }\n  }, rest), __jsx(HStack, null, __jsx(Icon, {\n    fontSize: iconSize,\n    as: icon,\n    color: iconColor\n  }), __jsx(Text, {\n    fontSize: \"sm\",\n    lineHeight: \"short\"\n  }, children)));\n}\n\nfunction ComponentLinks(props) {\n  const {\n    theme,\n    github,\n    npm,\n    storybook\n  } = props,\n        rest = _objectWithoutProperties(props, [\"theme\", \"github\", \"npm\", \"storybook\"]);\n\n  const githubRepoUrl = \"https://github.com/chakra-ui/chakra-ui\";\n\n  const githubLink = ((github === null || github === void 0 ? void 0 : github.url) || (github === null || github === void 0 ? void 0 : github.package)) && __jsx(WrapItem, null, __jsx(ComponentLink, {\n    url: github.url || `${githubRepoUrl}/tree/main/packages/${github.package}`,\n    icon: FaGithub,\n    iconColor: useColorModeValue(\"gray.600\", \"inherit\"),\n    iconSize: \"1rem\"\n  }, \"View source\"));\n\n  const npmLink = (npm === null || npm === void 0 ? void 0 : npm.package) && __jsx(WrapItem, null, __jsx(ComponentLink, {\n    url: `https://www.npmjs.com/package/${npm.package}`,\n    icon: FaNpm,\n    iconSize: \"2rem\",\n    iconColor: \"red.500\"\n  }, npm.package));\n\n  const storybookLink = (storybook === null || storybook === void 0 ? void 0 : storybook.url) && __jsx(WrapItem, null, __jsx(ComponentLink, {\n    url: storybook.url,\n    icon: StorybookIcon,\n    iconSize: \"1.25rem\",\n    iconColor: \"pink.500\"\n  }, \"View storybook\"));\n\n  const themeComponentLink = theme && __jsx(WrapItem, null, __jsx(ComponentLink, {\n    url: `${githubRepoUrl}/tree/main/packages/theme/src/components/${theme.componentName}.ts`,\n    icon: FaGithub,\n    iconColor: useColorModeValue(\"gray.600\", \"inherit\"),\n    iconSize: \"1rem\"\n  }, \"View theme source\"));\n\n  return __jsx(Wrap, _extends({\n    className: \"component-links\",\n    mt: \"2rem\",\n    spacing: \"4\"\n  }, rest), githubLink, themeComponentLink, npmLink, storybookLink);\n}\n\nexport default ComponentLinks;","map":null,"metadata":{},"sourceType":"module"}