{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nfunction SidebarCategory(props) {\n  var isMobile = props.isMobile,\n      title = props.title,\n      selected = props.selected,\n      opened = props.opened,\n      children = props.children,\n      contentRef = props.contentRef,\n      rest = _objectWithoutProperties(props, [\"isMobile\", \"title\", \"selected\", \"opened\", \"children\", \"contentRef\"]);\n\n  var ref = useRef(null);\n\n  var _useState = useState({\n    toggle: selected || opened\n  }),\n      _useState$ = _useState[0],\n      toggle = _useState$.toggle,\n      _useState$$shouldScro = _useState$.shouldScroll,\n      shouldScroll = _useState$$shouldScro === void 0 ? false : _useState$$shouldScro,\n      setToggle = _useState[1]; // const onClick = () => {\n  //   setToggle({ toggle: !toggle, shouldScroll: true })\n  // }\n  // If a category is selected indirectly, open it. This can happen when using the search input\n\n\n  useEffect(function () {\n    if (selected) {\n      setToggle({\n        toggle: true,\n        shouldScroll: true\n      });\n    }\n  }, [selected]); // Navigate to the start of the category when manually opened\n\n  useEffect(function () {\n    if (!ref.current || !(contentRef !== null && contentRef !== void 0 && contentRef.current)) return;\n\n    if (toggle && shouldScroll) {\n      var contentEl = contentRef.current;\n\n      if (toggle == true && contentEl) {\n        // 10 is added for better margin\n        var height = ref.current.offsetTop - (isMobile ? 10 : contentEl.offsetTop);\n        contentEl.scrollTop = height;\n        setToggle({\n          toggle: toggle\n        });\n      }\n    }\n  }, [toggle, shouldScroll, isMobile, contentRef]);\n  return __jsx(chakra.div, _extends({\n    mt: \"8\",\n    ref: ref\n  }, rest), __jsx(chakra.p, {\n    width: \"full\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"wider\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    userSelect: \"none\",\n    color: useColorModeValue(\"gray.500\", \"inherit\") // onClick={onClick}\n\n  }, title), __jsx(chakra.div, {\n    role: \"group\",\n    hidden: !toggle,\n    mt: \"16px\",\n    mx: \"-3\"\n  }, children));\n}\n\nexport default SidebarCategory;","map":null,"metadata":{},"sourceType":"module"}