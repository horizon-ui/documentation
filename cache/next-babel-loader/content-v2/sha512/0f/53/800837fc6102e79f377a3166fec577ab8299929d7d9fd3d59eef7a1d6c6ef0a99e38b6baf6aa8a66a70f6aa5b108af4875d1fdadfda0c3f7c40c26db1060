{"ast":null,"code":"var _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/table.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nexport const Table = props => __jsx(chakra.div, {\n  overflowX: \"auto\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, __jsx(chakra.table, _extends({\n  textAlign: \"left\",\n  mt: \"32px\",\n  width: \"full\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n})));\nexport const THead = props => __jsx(chakra.th, _extends({\n  bg: useColorModeValue(\"gray.50\", \"whiteAlpha.100\"),\n  fontWeight: \"semibold\",\n  p: 2,\n  fontSize: \"sm\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}));\nexport const TData = props => __jsx(chakra.td, _extends({\n  p: 2,\n  borderTopWidth: \"1px\",\n  borderColor: \"inherit\",\n  fontSize: \"sm\",\n  whiteSpace: \"normal\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}));","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/table.tsx"],"names":["chakra","useColorModeValue","React","Table","props","THead","TData"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,iBAAjB,QAA0C,kBAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IACnB,MAAC,MAAD,CAAQ,GAAR;AAAY,EAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,MAAD,CAAQ,KAAR;AAAc,EAAA,SAAS,EAAC,MAAxB;AAA+B,EAAA,EAAE,EAAC,MAAlC;AAAyC,EAAA,KAAK,EAAC;AAA/C,GAA0DA,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CADK;AAMP,OAAO,MAAMC,KAAK,GAAID,KAAD,IACnB,MAAC,MAAD,CAAQ,EAAR;AACE,EAAA,EAAE,EAAEH,iBAAiB,CAAC,SAAD,EAAY,gBAAZ,CADvB;AAEE,EAAA,UAAU,EAAC,UAFb;AAGE,EAAA,CAAC,EAAE,CAHL;AAIE,EAAA,QAAQ,EAAC;AAJX,GAKMG,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAUP,OAAO,MAAME,KAAK,GAAIF,KAAD,IACnB,MAAC,MAAD,CAAQ,EAAR;AACE,EAAA,CAAC,EAAE,CADL;AAEE,EAAA,cAAc,EAAC,KAFjB;AAGE,EAAA,WAAW,EAAC,SAHd;AAIE,EAAA,QAAQ,EAAC,IAJX;AAKE,EAAA,UAAU,EAAC;AALb,GAMMA,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK","sourcesContent":["import { chakra, useColorModeValue } from \"@chakra-ui/react\"\nimport * as React from \"react\"\n\nexport const Table = (props) => (\n  <chakra.div overflowX=\"auto\">\n    <chakra.table textAlign=\"left\" mt=\"32px\" width=\"full\" {...props} />\n  </chakra.div>\n)\n\nexport const THead = (props) => (\n  <chakra.th\n    bg={useColorModeValue(\"gray.50\", \"whiteAlpha.100\")}\n    fontWeight=\"semibold\"\n    p={2}\n    fontSize=\"sm\"\n    {...props}\n  />\n)\n\nexport const TData = (props) => (\n  <chakra.td\n    p={2}\n    borderTopWidth=\"1px\"\n    borderColor=\"inherit\"\n    fontSize=\"sm\"\n    whiteSpace=\"normal\"\n    {...props}\n  />\n)\n"]},"metadata":{},"sourceType":"module"}