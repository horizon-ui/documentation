{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useScrollSpy } from \"hooks/use-scrollspy\";\nimport { Box, ListItem, OrderedList, chakra, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction TableOfContent(props) {\n  var headings = props.headings,\n      rest = _objectWithoutProperties(props, [\"headings\"]);\n\n  var activeId = useScrollSpy(headings.map(function (_ref) {\n    var id = _ref.id;\n    return \"[id=\\\"\".concat(id, \"\\\"]\");\n  }), {\n    rootMargin: \"0% 0% -24% 0%\"\n  });\n  return __jsx(Box, _extends({\n    as: \"nav\",\n    \"aria-labelledby\": \"toc-title\",\n    width: \"16rem\",\n    flexShrink: 0,\n    display: {\n      base: \"none\",\n      xl: \"block\"\n    },\n    position: \"sticky\",\n    py: \"10\",\n    pr: \"4\",\n    top: \"6rem\",\n    right: \"0\",\n    fontSize: \"sm\",\n    alignSelf: \"start\",\n    maxHeight: \"calc(100vh - 8rem)\",\n    overflowY: \"auto\",\n    sx: {\n      overscrollBehavior: \"contain\"\n    }\n  }, rest), __jsx(Text, {\n    as: \"h2\",\n    id: \"toc-title\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    fontSize: \"xs\",\n    color: useColorModeValue(\"gray.700\", \"gray.400\"),\n    letterSpacing: \"wide\"\n  }, \"On this page\"), __jsx(OrderedList, {\n    spacing: 1,\n    ml: \"0\",\n    mt: \"4\",\n    styleType: \"none\"\n  }, headings.map(function (_ref2) {\n    var id = _ref2.id,\n        text = _ref2.text,\n        level = _ref2.level;\n    return __jsx(ListItem, {\n      key: id,\n      title: text,\n      ml: level === \"h3\" ? \"4\" : undefined\n    }, __jsx(chakra.a, {\n      py: \"1\",\n      display: \"block\",\n      fontWeight: id === activeId ? \"bold\" : \"medium\",\n      href: \"#\".concat(id),\n      \"aria-current\": id === activeId ? \"location\" : undefined,\n      color: useColorModeValue(\"gray.600\", \"white\"),\n      _hover: {\n        color: useColorModeValue(\"gray.900\", \"white\")\n      }\n    }, text));\n  })));\n}\n\nexport default TableOfContent;","map":null,"metadata":{},"sourceType":"module"}