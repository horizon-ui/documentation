{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/mobile-nav.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this = this,\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Center, CloseButton, Flex, HStack, IconButton, useBreakpointValue, useColorModeValue, useUpdateEffect } from \"@chakra-ui/react\";\nimport { AnimatePresence, motion, useElementScroll } from \"framer-motion\";\nimport useRouteChanged from \"hooks/use-route-changed\";\nimport { getRoutes } from \"layouts/mdx\";\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport * as React from \"react\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport Logo from \"./logo\";\nimport { SidebarContent } from \"./sidebar/sidebar\";\nimport DownloadButton from \"./sponsor-button\";\n\nfunction NavLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var _href$split = href.split(\"/\"),\n      _href$split2 = _slicedToArray(_href$split, 2),\n      group = _href$split2[1];\n\n  var isActive = pathname.includes(group);\n  return __jsx(NextLink, {\n    href: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Center, {\n    flex: \"1\",\n    minH: \"40px\",\n    as: \"button\",\n    rounded: \"md\",\n    transition: \"0.2s all\",\n    fontWeight: isActive ? \"semibold\" : \"medium\",\n    bg: isActive ? \"brand.400\" : undefined,\n    borderWidth: isActive ? undefined : \"1px\",\n    color: isActive ? \"white\" : undefined,\n    _hover: {\n      bg: isActive ? \"brand.500\" : useColorModeValue(\"gray.100\", \"whiteAlpha.100\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_s(NavLink, \"8c/0L2gPdnxRfVGllOcu7QfPkQU=\", false, function () {\n  return [useRouter, useColorModeValue];\n});\n\n_c = NavLink;\nexport function MobileNavContent(props) {\n  _s2();\n\n  var isOpen = props.isOpen,\n      onClose = props.onClose;\n  var closeBtnRef = React.useRef();\n\n  var _useRouter2 = useRouter(),\n      pathname = _useRouter2.pathname;\n\n  useRouteChanged(onClose);\n  /**\n   * Scenario: Menu is open on mobile, and user resizes to desktop/tablet viewport.\n   * Result: We'll close the menu\n   */\n\n  var showOnBreakpoint = useBreakpointValue({\n    base: true,\n    lg: false\n  });\n  React.useEffect(function () {\n    if (showOnBreakpoint == false) {\n      onClose();\n    }\n  }, [showOnBreakpoint]);\n  useUpdateEffect(function () {\n    if (isOpen) {\n      requestAnimationFrame(function () {\n        var _closeBtnRef$current;\n\n        (_closeBtnRef$current = closeBtnRef.current) === null || _closeBtnRef$current === void 0 ? void 0 : _closeBtnRef$current.focus();\n      });\n    }\n  }, [isOpen]);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shadow = _React$useState2[0],\n      setShadow = _React$useState2[1];\n\n  return __jsx(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, isOpen && __jsx(RemoveScroll, {\n    forwardProps: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(motion.div, {\n    transition: {\n      duration: 0.08\n    },\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    direction: \"column\",\n    w: \"100%\",\n    bg: useColorModeValue(\"white\", \"gray.800\"),\n    h: \"100vh\",\n    overflow: \"auto\",\n    pos: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    zIndex: 20,\n    pb: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    justify: \"space-between\",\n    px: \"6\",\n    pt: \"5\",\n    pb: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(Logo, {\n    sx: {\n      rect: {\n        fill: \"brand.300\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), __jsx(HStack, {\n    spacing: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, __jsx(CloseButton, {\n    ref: closeBtnRef,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })))), __jsx(ScrollView, {\n    onScroll: function onScroll(scrolled) {\n      setShadow(scrolled ? \"md\" : undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mb: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(DownloadButton, {\n    display: \"flex\",\n    w: \"fit-content\",\n    me: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }), __jsx(Box, {\n    display: {\n      base: \"flex\",\n      lg: \"none\"\n    },\n    alignItems: \"center\",\n    as: \"a\",\n    \"aria-label\": \"See Pricing\",\n    href: \"https://horizon-ui.com/#pricing\",\n    target: \"_blank\",\n    bg: useColorModeValue(\"brand.500\", \"brand.400\"),\n    px: \"24px\",\n    minH: \"48px\",\n    borderRadius: \"12px\",\n    fontSize: \"sm\",\n    color: \"white\",\n    outline: \"0\",\n    transition: \"all 0.3s\",\n    w: \"fit-content\",\n    _hover: {\n      bg: useColorModeValue(\"brand.700\", \"brand.300\")\n    },\n    _active: {\n      borderColor: \"brand.200\"\n    },\n    _focus: {\n      boxShadow: \"outline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    as: \"strong\",\n    lineHeight: \"inherit\",\n    fontWeight: \"semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"See Pricing\"))), __jsx(SidebarContent, {\n    pathname: pathname,\n    routes: getRoutes(pathname),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }))))));\n}\n\n_s2(MobileNavContent, \"pq+ASEt6Ce856TBvf4AsRZGfpZg=\", false, function () {\n  return [useRouter, useRouteChanged, useBreakpointValue, useUpdateEffect, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c2 = MobileNavContent;\n\nvar ScrollView = function ScrollView(props) {\n  _s3();\n\n  var onScroll = props.onScroll,\n      rest = _objectWithoutProperties(props, [\"onScroll\"]);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      y = _React$useState4[0],\n      setY = _React$useState4[1];\n\n  var elRef = React.useRef();\n\n  var _useElementScroll = useElementScroll(elRef),\n      scrollY = _useElementScroll.scrollY;\n\n  React.useEffect(function () {\n    return scrollY.onChange(function () {\n      return setY(scrollY.get());\n    });\n  }, [scrollY]);\n  useUpdateEffect(function () {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(y > 5 ? true : false);\n  }, [y]);\n  return __jsx(Box, _extends({\n    ref: elRef,\n    flex: \"1\",\n    id: \"routes\",\n    overflow: \"auto\",\n    px: \"6\",\n    pb: \"6\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s3(ScrollView, \"L1PVdp+/dSGKjyHrJWN5R+kJ9RI=\", false, function () {\n  return [useElementScroll, useUpdateEffect];\n});\n\n_c3 = ScrollView;\nexport var MobileNavButton = /*#__PURE__*/React.forwardRef(_c4 = _s4(function (props, ref) {\n  _s4();\n\n  return __jsx(IconButton, _extends({\n    ref: ref,\n    display: {\n      base: \"flex\",\n      md: \"none\"\n    },\n    \"aria-label\": \"Open menu\",\n    fontSize: \"20px\",\n    color: useColorModeValue(\"gray.800\", \"inherit\"),\n    variant: \"ghost\",\n    icon: __jsx(AiOutlineMenu, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    })\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }));\n}, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n}));\n_c5 = MobileNavButton;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"MobileNavContent\");\n$RefreshReg$(_c3, \"ScrollView\");\n$RefreshReg$(_c4, \"MobileNavButton$React.forwardRef\");\n$RefreshReg$(_c5, \"MobileNavButton\");","map":{"version":3,"sources":["/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/mobile-nav.tsx"],"names":["Box","Center","CloseButton","Flex","HStack","IconButton","useBreakpointValue","useColorModeValue","useUpdateEffect","AnimatePresence","motion","useElementScroll","useRouteChanged","getRoutes","NextLink","useRouter","React","AiOutlineMenu","RemoveScroll","Logo","SidebarContent","DownloadButton","NavLink","href","children","pathname","split","group","isActive","includes","undefined","bg","MobileNavContent","props","isOpen","onClose","closeBtnRef","useRef","showOnBreakpoint","base","lg","useEffect","requestAnimationFrame","current","focus","useState","shadow","setShadow","duration","opacity","rect","fill","scrolled","borderColor","boxShadow","ScrollView","onScroll","rest","y","setY","elRef","scrollY","onChange","get","MobileNavButton","forwardRef","ref","md"],"mappings":"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","sourcesContent":["import {\n  Box,\n  BoxProps,\n  Center,\n  CloseButton,\n  Flex,\n  HStack,\n  IconButton,\n  IconButtonProps,\n  useBreakpointValue,\n  useColorModeValue,\n  useUpdateEffect,\n} from \"@chakra-ui/react\"\nimport { AnimatePresence, motion, useElementScroll } from \"framer-motion\"\nimport useRouteChanged from \"hooks/use-route-changed\"\nimport { getRoutes } from \"layouts/mdx\"\nimport NextLink from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport * as React from \"react\"\nimport { AiOutlineMenu } from \"react-icons/ai\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport Logo from \"./logo\"\nimport { SidebarContent } from \"./sidebar/sidebar\"\nimport DownloadButton from \"./sponsor-button\"\n\nfunction NavLink({ href, children }) {\n  const { pathname } = useRouter()\n\n  const [, group] = href.split(\"/\")\n  const isActive = pathname.includes(group)\n\n  return (\n    <NextLink href={href}>\n      <Center\n        flex=\"1\"\n        minH=\"40px\"\n        as=\"button\"\n        rounded=\"md\"\n        transition=\"0.2s all\"\n        fontWeight={isActive ? \"semibold\" : \"medium\"}\n        bg={isActive ? \"brand.400\" : undefined}\n        borderWidth={isActive ? undefined : \"1px\"}\n        color={isActive ? \"white\" : undefined}\n        _hover={{\n          bg: isActive\n            ? \"brand.500\"\n            : useColorModeValue(\"gray.100\", \"whiteAlpha.100\"),\n        }}\n      >\n        {children}\n      </Center>\n    </NextLink>\n  )\n}\n\ninterface MobileNavContentProps {\n  isOpen?: boolean\n  onClose?: () => void\n}\n\nexport function MobileNavContent(props: MobileNavContentProps) {\n  const { isOpen, onClose } = props\n  const closeBtnRef = React.useRef<HTMLButtonElement>()\n  const { pathname } = useRouter()\n\n  useRouteChanged(onClose)\n\n  /**\n   * Scenario: Menu is open on mobile, and user resizes to desktop/tablet viewport.\n   * Result: We'll close the menu\n   */\n  const showOnBreakpoint = useBreakpointValue({ base: true, lg: false })\n\n  React.useEffect(() => {\n    if (showOnBreakpoint == false) {\n      onClose()\n    }\n  }, [showOnBreakpoint])\n\n  useUpdateEffect(() => {\n    if (isOpen) {\n      requestAnimationFrame(() => {\n        closeBtnRef.current?.focus()\n      })\n    }\n  }, [isOpen])\n\n  const [shadow, setShadow] = React.useState<string>()\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <RemoveScroll forwardProps>\n          <motion.div\n            transition={{ duration: 0.08 }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              bg={useColorModeValue(\"white\", \"gray.800\")}\n              h=\"100vh\"\n              overflow=\"auto\"\n              pos=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              zIndex={20}\n              pb=\"8\"\n            >\n              <Box>\n                <Flex justify=\"space-between\" px=\"6\" pt=\"5\" pb=\"4\">\n                  <Logo sx={{ rect: { fill: \"brand.300\" } }} />\n                  <HStack spacing=\"5\">\n                    <CloseButton ref={closeBtnRef} onClick={onClose} />\n                  </HStack>\n                </Flex>\n              </Box>\n\n              <ScrollView\n                onScroll={(scrolled) => {\n                  setShadow(scrolled ? \"md\" : undefined)\n                }}\n              >\n                <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"20px\">\n                  <DownloadButton display=\"flex\" w=\"fit-content\" me=\"20px\" />\n                  <Box\n                    display={{ base: \"flex\", lg: \"none\" }}\n                    alignItems=\"center\"\n                    as=\"a\"\n                    aria-label=\"See Pricing\"\n                    href=\"https://horizon-ui.com/#pricing\"\n                    target=\"_blank\"\n                    bg={useColorModeValue(\"brand.500\", \"brand.400\")}\n                    px=\"24px\"\n                    minH=\"48px\"\n                    borderRadius=\"12px\"\n                    fontSize=\"sm\"\n                    color=\"white\"\n                    outline=\"0\"\n                    transition=\"all 0.3s\"\n                    w=\"fit-content\"\n                    _hover={{\n                      bg: useColorModeValue(\"brand.700\", \"brand.300\"),\n                    }}\n                    _active={{\n                      borderColor: \"brand.200\",\n                    }}\n                    _focus={{\n                      boxShadow: \"outline\",\n                    }}\n                  >\n                    <Box as=\"strong\" lineHeight=\"inherit\" fontWeight=\"semibold\">\n                      See Pricing\n                    </Box>\n                  </Box>\n                </Flex>\n                <SidebarContent\n                  pathname={pathname}\n                  routes={getRoutes(pathname)}\n                />\n              </ScrollView>\n            </Flex>\n          </motion.div>\n        </RemoveScroll>\n      )}\n    </AnimatePresence>\n  )\n}\n\nconst ScrollView = (props: BoxProps & { onScroll?: any }) => {\n  const { onScroll, ...rest } = props\n  const [y, setY] = React.useState(0)\n  const elRef = React.useRef<any>()\n  const { scrollY } = useElementScroll(elRef)\n  React.useEffect(() => {\n    return scrollY.onChange(() => setY(scrollY.get()))\n  }, [scrollY])\n\n  useUpdateEffect(() => {\n    onScroll?.(y > 5 ? true : false)\n  }, [y])\n\n  return (\n    <Box\n      ref={elRef}\n      flex=\"1\"\n      id=\"routes\"\n      overflow=\"auto\"\n      px=\"6\"\n      pb=\"6\"\n      {...rest}\n    />\n  )\n}\n\nexport const MobileNavButton = React.forwardRef(\n  (props: IconButtonProps, ref: React.Ref<any>) => {\n    return (\n      <IconButton\n        ref={ref}\n        display={{ base: \"flex\", md: \"none\" }}\n        aria-label=\"Open menu\"\n        fontSize=\"20px\"\n        color={useColorModeValue(\"gray.800\", \"inherit\")}\n        variant=\"ghost\"\n        icon={<AiOutlineMenu />}\n        {...props}\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}