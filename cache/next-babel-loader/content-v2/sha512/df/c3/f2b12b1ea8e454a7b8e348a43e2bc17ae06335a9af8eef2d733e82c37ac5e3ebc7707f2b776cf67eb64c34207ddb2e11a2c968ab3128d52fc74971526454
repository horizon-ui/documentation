{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nconst StyledLink = /*#__PURE__*/React.forwardRef(function StyledLink(props, ref) {\n  const {\n    isActive\n  } = props,\n        rest = _objectWithoutProperties(props, [\"isActive\"]);\n\n  return __jsx(chakra.a, _extends({\n    \"aria-current\": isActive ? \"page\" : undefined,\n    width: \"100%\",\n    px: \"3\",\n    py: \"1\",\n    rounded: \"md\",\n    letterSpacing: \"0.4px\",\n    ref: ref,\n    fontSize: \"sm\",\n    fontWeight: \"500\",\n    color: useColorModeValue(\"gray.700\", \"whiteAlpha.900\"),\n    transition: \"all 0.2s\",\n    _activeLink: {\n      bg: useColorModeValue(\"brand.50\", \"whiteAlpha.200\"),\n      color: useColorModeValue(\"brand.500\", \"brand.00\"),\n      fontWeight: \"600\"\n    }\n  }, rest));\n});\n\nconst SidebarLink = props => {\n  const {\n    href,\n    icon,\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, [\"href\", \"icon\", \"children\"]);\n\n  const {\n    asPath\n  } = useRouter();\n  const isActive = asPath === href;\n  return __jsx(chakra.div, _extends({\n    userSelect: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    lineHeight: \"1.5rem\"\n  }, rest), __jsx(NextLink, {\n    href: href,\n    passHref: true\n  }, __jsx(StyledLink, {\n    isActive: isActive\n  }, children)));\n};\n\nexport default SidebarLink;","map":null,"metadata":{},"sourceType":"module"}