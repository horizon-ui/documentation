{"ast":null,"code":"export const getAllRoutes = routes => {\n  const allRoutes = [];\n  routes[0].routes.forEach(route => {\n    if (route.routes) {\n      route.routes.forEach(item => {\n        allRoutes.push(item);\n      });\n    } else {\n      allRoutes.push(route);\n    }\n  });\n  return allRoutes;\n};\n/**\n * Returns the siblings of a specific route (that is the previous and next routes).\n */\n\nexport const getRouteContext = (_route, routes) => {\n  let ctx = {};\n  if (!_route) return ctx;\n  const {\n    path\n  } = _route;\n  const allRoutes = getAllRoutes(routes);\n\n  for (let i = 0; i < allRoutes.length; i += 1) {\n    const route = allRoutes[i];\n\n    if (route && route.path === path) {\n      const nextRoute = allRoutes[i + 1];\n      const prevRoute = allRoutes[i - 1];\n      ctx = {\n        nextRoute,\n        prevRoute,\n        route: _route\n      };\n    }\n  }\n\n  return ctx;\n};","map":null,"metadata":{},"sourceType":"module"}