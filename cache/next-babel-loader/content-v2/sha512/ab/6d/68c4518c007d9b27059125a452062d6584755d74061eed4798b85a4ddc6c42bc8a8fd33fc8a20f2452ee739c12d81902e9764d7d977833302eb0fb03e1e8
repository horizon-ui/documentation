{"ast":null,"code":"var _jsxFileName = \"/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/mdx-components/mdx-components.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as Chakra from \"@chakra-ui/react\";\nimport { ColorPalette, ColorPalettes, ColorWrapper } from \"components/color-palette\";\nimport { Anchor } from \"components/mdx-components/anchor\";\nimport { InlineCode } from \"components/mdx-components/inline-code\";\nimport { LinkedHeading } from \"components/mdx-components/linked-heading\";\nimport { Pre } from \"components/mdx-components/pre\";\nimport { Table, TData, THead } from \"components/mdx-components/table\";\nimport { VideoPlayer } from \"components/mdx-components/video-player\";\nimport * as React from \"react\";\nimport PropsTable from \"../props-table\";\nimport CarbonAd from \"./carbon-ad\";\nimport CodeBlock from \"./codeblock/codeblock\";\nimport ComponentLinks from \"./component-links\";\nimport IconsList from \"./icons-list\";\nconst {\n  Alert,\n  Box,\n  chakra,\n  Kbd\n} = Chakra;\nexport const MDXComponents = _objectSpread(_objectSpread({}, Chakra), {}, {\n  h1: props => __jsx(chakra.h1, _extends({\n    apply: \"mdx.h1\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }\n  })),\n  h2: props => __jsx(LinkedHeading, _extends({\n    apply: \"mdx.h2\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  })),\n  h3: props => __jsx(LinkedHeading, _extends({\n    as: \"h3\",\n    apply: \"mdx.h3\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  })),\n  h4: props => __jsx(LinkedHeading, _extends({\n    as: \"h4\",\n    apply: \"mdx.h4\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }\n  })),\n  hr: props => __jsx(chakra.hr, _extends({\n    apply: \"mdx.hr\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  })),\n  strong: props => __jsx(Box, _extends({\n    as: \"strong\",\n    fontWeight: \"semibold\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  })),\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: (_ref) => {\n    let {\n      reset\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"reset\"]);\n\n    return __jsx(Box, _extends({\n      as: reset ? \"br\" : undefined,\n      height: reset ? undefined : \"24px\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }));\n  },\n  table: Table,\n  th: THead,\n  td: TData,\n  a: Anchor,\n  p: props => __jsx(chakra.p, _extends({\n    apply: \"mdx.p\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })),\n  ul: props => __jsx(chakra.ul, _extends({\n    apply: \"mdx.ul\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }\n  })),\n  ol: props => __jsx(chakra.ol, _extends({\n    apply: \"mdx.ul\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }\n  })),\n  li: props => __jsx(chakra.li, _extends({\n    pb: \"4px\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }\n  })),\n  blockquote: props => __jsx(Alert, _extends({\n    mt: \"4\",\n    role: \"none\",\n    status: \"warning\",\n    variant: \"left-accent\",\n    as: \"blockquote\",\n    rounded: \"4px\",\n    my: \"1.5rem\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  })),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable,\n  VideoPlayer,\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper\n});","map":{"version":3,"sources":["/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/mdx-components/mdx-components.tsx"],"names":["Chakra","ColorPalette","ColorPalettes","ColorWrapper","Anchor","InlineCode","LinkedHeading","Pre","Table","TData","THead","VideoPlayer","React","PropsTable","CarbonAd","CodeBlock","ComponentLinks","IconsList","Alert","Box","chakra","Kbd","MDXComponents","h1","props","h2","h3","h4","hr","strong","inlineCode","code","pre","kbd","br","reset","undefined","table","th","td","a","p","ul","ol","li","blockquote"],"mappings":"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","sourcesContent":["import * as Chakra from \"@chakra-ui/react\"\nimport {\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper,\n} from \"components/color-palette\"\nimport { Anchor } from \"components/mdx-components/anchor\"\nimport { InlineCode } from \"components/mdx-components/inline-code\"\nimport { LinkedHeading } from \"components/mdx-components/linked-heading\"\nimport { Pre } from \"components/mdx-components/pre\"\nimport { Table, TData, THead } from \"components/mdx-components/table\"\nimport { VideoPlayer } from \"components/mdx-components/video-player\"\nimport * as React from \"react\"\nimport PropsTable from \"../props-table\"\nimport CarbonAd from \"./carbon-ad\"\nimport CodeBlock from \"./codeblock/codeblock\"\nimport ComponentLinks from \"./component-links\"\nimport IconsList from \"./icons-list\"\n\nconst { Alert, Box, chakra, Kbd } = Chakra\n\nexport const MDXComponents = {\n  ...Chakra,\n  h1: (props) => <chakra.h1 apply=\"mdx.h1\" {...props} />,\n  h2: (props) => <LinkedHeading apply=\"mdx.h2\" {...props} />,\n  h3: (props) => <LinkedHeading as=\"h3\" apply=\"mdx.h3\" {...props} />,\n  h4: (props) => <LinkedHeading as=\"h4\" apply=\"mdx.h4\" {...props} />,\n  hr: (props) => <chakra.hr apply=\"mdx.hr\" {...props} />,\n  strong: (props) => <Box as=\"strong\" fontWeight=\"semibold\" {...props} />,\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: ({ reset, ...props }) => (\n    <Box\n      as={reset ? \"br\" : undefined}\n      height={reset ? undefined : \"24px\"}\n      {...props}\n    />\n  ),\n  table: Table,\n  th: THead,\n  td: TData,\n  a: Anchor,\n  p: (props) => <chakra.p apply=\"mdx.p\" {...props} />,\n  ul: (props) => <chakra.ul apply=\"mdx.ul\" {...props} />,\n  ol: (props) => <chakra.ol apply=\"mdx.ul\" {...props} />,\n  li: (props) => <chakra.li pb=\"4px\" {...props} />,\n  blockquote: (props) => (\n    <Alert\n      mt=\"4\"\n      role=\"none\"\n      status=\"warning\"\n      variant=\"left-accent\"\n      as=\"blockquote\"\n      rounded=\"4px\"\n      my=\"1.5rem\"\n      {...props}\n    />\n  ),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable,\n  VideoPlayer,\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper,\n}\n"]},"metadata":{},"sourceType":"module"}