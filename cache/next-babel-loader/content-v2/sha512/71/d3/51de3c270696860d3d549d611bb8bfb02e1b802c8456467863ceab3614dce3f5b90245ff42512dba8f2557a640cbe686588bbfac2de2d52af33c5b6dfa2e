{"ast":null,"code":"var _jsxFileName = \"/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/sidebar/sidebar-link.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nconst StyledLink = /*#__PURE__*/React.forwardRef(function StyledLink(props, ref) {\n  const {\n    isActive\n  } = props,\n        rest = _objectWithoutProperties(props, [\"isActive\"]);\n\n  return __jsx(chakra.a, _extends({\n    \"aria-current\": isActive ? \"page\" : undefined,\n    width: \"100%\",\n    px: \"3\",\n    py: \"1\",\n    rounded: \"md\",\n    letterSpacing: \"0.4px\",\n    ref: ref,\n    fontSize: \"sm\",\n    fontWeight: \"500\",\n    color: useColorModeValue(\"gray.700\", \"whiteAlpha.900\"),\n    transition: \"all 0.2s\",\n    _activeLink: {\n      bg: useColorModeValue(\"brand.50\", \"whiteAlpha.200\"),\n      color: useColorModeValue(\"brand.500\", \"brand.00\"),\n      fontWeight: \"600\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n});\n\nconst SidebarLink = props => {\n  const {\n    href,\n    icon,\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, [\"href\", \"icon\", \"children\"]);\n\n  const {\n    asPath\n  } = useRouter();\n  const isActive = asPath === href;\n  return __jsx(chakra.div, _extends({\n    userSelect: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    lineHeight: \"1.5rem\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), __jsx(NextLink, {\n    href: href,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(StyledLink, {\n    isActive: isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default SidebarLink;","map":{"version":3,"sources":["/Users/andreifredy/Desktop/docs-horizon-ui/website/src/components/sidebar/sidebar-link.tsx"],"names":["chakra","useColorModeValue","NextLink","useRouter","React","StyledLink","forwardRef","props","ref","isActive","rest","undefined","bg","color","fontWeight","SidebarLink","href","icon","children","asPath"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAA0BC,iBAA1B,QAAmD,kBAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,gBAAGD,KAAK,CAACE,UAAN,CAAiB,SAASD,UAAT,CAClCE,KADkC,EAElCC,GAFkC,EAGlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBF,KAA9B;AAAA,QAAqBG,IAArB,4BAA8BH,KAA9B;;AAEA,SACE,MAAC,MAAD,CAAQ,CAAR;AACE,oBAAcE,QAAQ,GAAG,MAAH,GAAYE,SADpC;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,EAAE,EAAC,GAJL;AAKE,IAAA,OAAO,EAAC,IALV;AAME,IAAA,aAAa,EAAC,OANhB;AAOE,IAAA,GAAG,EAAEH,GAPP;AAQE,IAAA,QAAQ,EAAC,IARX;AASE,IAAA,UAAU,EAAC,KATb;AAUE,IAAA,KAAK,EAAEP,iBAAiB,CAAC,UAAD,EAAa,gBAAb,CAV1B;AAWE,IAAA,UAAU,EAAC,UAXb;AAYE,IAAA,WAAW,EAAE;AACXW,MAAAA,EAAE,EAAEX,iBAAiB,CAAC,UAAD,EAAa,gBAAb,CADV;AAEXY,MAAAA,KAAK,EAAEZ,iBAAiB,CAAC,WAAD,EAAc,UAAd,CAFb;AAGXa,MAAAA,UAAU,EAAE;AAHD;AAZf,KAiBMJ,IAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAqBD,CA3BkB,CAAnB;;AAkCA,MAAMK,WAAW,GAAIR,KAAD,IAA6B;AAC/C,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAoCX,KAA1C;AAAA,QAAiCG,IAAjC,4BAA0CH,KAA1C;;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AACA,QAAMM,QAAQ,GAAGU,MAAM,KAAKH,IAA5B;AAEA,SACE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,UAAU,EAAC;AAJb,KAKMN,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,IAAhB;AAAsB,IAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEP,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCS,QAAjC,CADF,CAPF,CADF;AAaD,CAnBD;;AAqBA,eAAeH,WAAf","sourcesContent":["import { chakra, PropsOf, useColorModeValue } from \"@chakra-ui/react\"\nimport NextLink from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport React from \"react\"\n\nconst StyledLink = React.forwardRef(function StyledLink(\n  props: PropsOf<typeof chakra.a> & { isActive?: boolean },\n  ref: React.Ref<any>,\n) {\n  const { isActive, ...rest } = props\n\n  return (\n    <chakra.a\n      aria-current={isActive ? \"page\" : undefined}\n      width=\"100%\"\n      px=\"3\"\n      py=\"1\"\n      rounded=\"md\"\n      letterSpacing=\"0.4px\"\n      ref={ref}\n      fontSize=\"sm\"\n      fontWeight=\"500\"\n      color={useColorModeValue(\"gray.700\", \"whiteAlpha.900\")}\n      transition=\"all 0.2s\"\n      _activeLink={{\n        bg: useColorModeValue(\"brand.50\", \"whiteAlpha.200\"),\n        color: useColorModeValue(\"brand.500\", \"brand.00\"),\n        fontWeight: \"600\",\n      }}\n      {...rest}\n    />\n  )\n})\n\ntype SidebarLinkProps = PropsOf<typeof chakra.div> & {\n  href?: string\n  icon?: React.ReactElement\n}\n\nconst SidebarLink = (props: SidebarLinkProps) => {\n  const { href, icon, children, ...rest } = props\n\n  const { asPath } = useRouter()\n  const isActive = asPath === href\n\n  return (\n    <chakra.div\n      userSelect=\"none\"\n      display=\"flex\"\n      alignItems=\"center\"\n      lineHeight=\"1.5rem\"\n      {...rest}\n    >\n      <NextLink href={href} passHref>\n        <StyledLink isActive={isActive}>{children}</StyledLink>\n      </NextLink>\n    </chakra.div>\n  )\n}\n\nexport default SidebarLink\n"]},"metadata":{},"sourceType":"module"}