{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/sidebar/sidebar-link.tsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { chakra, useColorModeValue } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nvar StyledLink = /*#__PURE__*/React.forwardRef(_c = _s(function StyledLink(props, ref) {\n  _s();\n\n  var isActive = props.isActive,\n      rest = _objectWithoutProperties(props, [\"isActive\"]);\n\n  return __jsx(chakra.a, _extends({\n    \"aria-current\": isActive ? \"page\" : undefined,\n    width: \"100%\",\n    px: \"3\",\n    py: \"1\",\n    rounded: \"md\",\n    letterSpacing: \"0.4px\",\n    ref: ref,\n    fontSize: \"sm\",\n    fontWeight: \"500\",\n    color: useColorModeValue(\"gray.700\", \"whiteAlpha.900\"),\n    transition: \"all 0.2s\",\n    _activeLink: {\n      bg: useColorModeValue(\"brand.50\", \"whiteAlpha.200\"),\n      color: useColorModeValue(\"brand.500\", \"brand.00\"),\n      fontWeight: \"600\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n}, \"6SPWDKKJx3x6/piDRqtxmfjVGnY=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue];\n}));\n_c2 = StyledLink;\n\nvar SidebarLink = function SidebarLink(props) {\n  _s2();\n\n  var href = props.href,\n      icon = props.icon,\n      children = props.children,\n      rest = _objectWithoutProperties(props, [\"href\", \"icon\", \"children\"]);\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath;\n\n  var isActive = asPath === href;\n  return __jsx(chakra.div, _extends({\n    userSelect: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    lineHeight: \"1.5rem\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), __jsx(NextLink, {\n    href: href,\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(StyledLink, {\n    isActive: isActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\n_s2(SidebarLink, \"9pMG9Ra3x5O/yaZiUz6XxVJ+Rds=\", false, function () {\n  return [useRouter];\n});\n\n_c3 = SidebarLink;\nexport default SidebarLink;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledLink$React.forwardRef\");\n$RefreshReg$(_c2, \"StyledLink\");\n$RefreshReg$(_c3, \"SidebarLink\");","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/sidebar/sidebar-link.tsx"],"names":["chakra","useColorModeValue","NextLink","useRouter","React","StyledLink","forwardRef","props","ref","isActive","rest","undefined","bg","color","fontWeight","SidebarLink","href","icon","children","asPath"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAA0BC,iBAA1B,QAAmD,kBAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,gBAAGD,KAAK,CAACE,UAAN,SAAiB,SAASD,UAAT,CAClCE,KADkC,EAElCC,GAFkC,EAGlC;AAAA;;AAAA,MACQC,QADR,GAC8BF,KAD9B,CACQE,QADR;AAAA,MACqBC,IADrB,4BAC8BH,KAD9B;;AAGA,SACE,MAAC,MAAD,CAAQ,CAAR;AACE,oBAAcE,QAAQ,GAAG,MAAH,GAAYE,SADpC;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,EAAE,EAAC,GAJL;AAKE,IAAA,OAAO,EAAC,IALV;AAME,IAAA,aAAa,EAAC,OANhB;AAOE,IAAA,GAAG,EAAEH,GAPP;AAQE,IAAA,QAAQ,EAAC,IARX;AASE,IAAA,UAAU,EAAC,KATb;AAUE,IAAA,KAAK,EAAEP,iBAAiB,CAAC,UAAD,EAAa,gBAAb,CAV1B;AAWE,IAAA,UAAU,EAAC,UAXb;AAYE,IAAA,WAAW,EAAE;AACXW,MAAAA,EAAE,EAAEX,iBAAiB,CAAC,UAAD,EAAa,gBAAb,CADV;AAEXY,MAAAA,KAAK,EAAEZ,iBAAiB,CAAC,WAAD,EAAc,UAAd,CAFb;AAGXa,MAAAA,UAAU,EAAE;AAHD;AAZf,KAiBMJ,IAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAqBD,CA3BkB;AAAA,UAiBNT,iBAjBM,EAoBPA,iBApBO,EAqBJA,iBArBI;AAAA,GAAnB;MAAMI,U;;AAkCN,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAACR,KAAD,EAA6B;AAAA;;AAAA,MACvCS,IADuC,GACLT,KADK,CACvCS,IADuC;AAAA,MACjCC,IADiC,GACLV,KADK,CACjCU,IADiC;AAAA,MAC3BC,QAD2B,GACLX,KADK,CAC3BW,QAD2B;AAAA,MACdR,IADc,4BACLH,KADK;;AAAA,mBAG5BJ,SAAS,EAHmB;AAAA,MAGvCgB,MAHuC,cAGvCA,MAHuC;;AAI/C,MAAMV,QAAQ,GAAGU,MAAM,KAAKH,IAA5B;AAEA,SACE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,UAAU,EAAC;AAJb,KAKMN,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,IAAhB;AAAsB,IAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEP,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCS,QAAjC,CADF,CAPF,CADF;AAaD,CAnBD;;IAAMH,W;UAGeZ,S;;;MAHfY,W;AAqBN,eAAeA,WAAf","sourcesContent":["import { chakra, PropsOf, useColorModeValue } from \"@chakra-ui/react\"\nimport NextLink from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport React from \"react\"\n\nconst StyledLink = React.forwardRef(function StyledLink(\n  props: PropsOf<typeof chakra.a> & { isActive?: boolean },\n  ref: React.Ref<any>,\n) {\n  const { isActive, ...rest } = props\n\n  return (\n    <chakra.a\n      aria-current={isActive ? \"page\" : undefined}\n      width=\"100%\"\n      px=\"3\"\n      py=\"1\"\n      rounded=\"md\"\n      letterSpacing=\"0.4px\"\n      ref={ref}\n      fontSize=\"sm\"\n      fontWeight=\"500\"\n      color={useColorModeValue(\"gray.700\", \"whiteAlpha.900\")}\n      transition=\"all 0.2s\"\n      _activeLink={{\n        bg: useColorModeValue(\"brand.50\", \"whiteAlpha.200\"),\n        color: useColorModeValue(\"brand.500\", \"brand.00\"),\n        fontWeight: \"600\",\n      }}\n      {...rest}\n    />\n  )\n})\n\ntype SidebarLinkProps = PropsOf<typeof chakra.div> & {\n  href?: string\n  icon?: React.ReactElement\n}\n\nconst SidebarLink = (props: SidebarLinkProps) => {\n  const { href, icon, children, ...rest } = props\n\n  const { asPath } = useRouter()\n  const isActive = asPath === href\n\n  return (\n    <chakra.div\n      userSelect=\"none\"\n      display=\"flex\"\n      alignItems=\"center\"\n      lineHeight=\"1.5rem\"\n      {...rest}\n    >\n      <NextLink href={href} passHref>\n        <StyledLink isActive={isActive}>{children}</StyledLink>\n      </NextLink>\n    </chakra.div>\n  )\n}\n\nexport default SidebarLink\n"]},"metadata":{},"sourceType":"module"}