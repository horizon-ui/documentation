{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport PageContainer from \"components/page-container\";\nimport dynamic from \"next/dynamic\";\nvar MDXLayout = dynamic(function () {\n  return import(\"layouts/mdx\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"layouts/mdx\")];\n    },\n    modules: [\"layouts/mdx\"]\n  }\n});\nexport default function DefaultLayout(_ref) {\n  var children = _ref.children,\n      frontMatter = _ref.frontMatter;\n  var slug = frontMatter.slug;\n  var layoutMap = {\n    guides: __jsx(MDXLayout, {\n      frontmatter: frontMatter\n    }, children),\n    docs: __jsx(MDXLayout, {\n      frontmatter: frontMatter\n    }, children),\n    changelog: __jsx(MDXLayout, {\n      frontmatter: frontMatter\n    }, children),\n    \"default\": __jsx(PageContainer, {\n      frontmatter: frontMatter\n    }, children)\n  };\n  var layout = Object.entries(layoutMap).find(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n        path = _ref3[0];\n\n    return String(slug).startsWith(\"/\".concat(path));\n  });\n  if (!layout) return layoutMap[\"default\"];\n  return layout[1];\n}","map":null,"metadata":{},"sourceType":"module"}