{"ast":null,"code":"var _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/codeblock/react-live-block.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Box, chakra } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { LiveError, LivePreview, LiveProvider } from \"react-live\";\nimport scope from \"./react-live-scope\";\nimport { liveErrorStyle } from \"./styles\";\nconst LiveCodePreview = chakra(LivePreview, {\n  baseStyle: {\n    fontFamily: \"body\",\n    mt: 5,\n    p: 3,\n    borderWidth: 1,\n    borderRadius: \"12px\"\n  }\n});\n\nconst EditableNotice = props => {\n  return __jsx(Box, _extends({\n    position: \"absolute\",\n    width: \"full\",\n    top: \"-1.25em\",\n    roundedTop: \"8px\",\n    bg: \"#011627\",\n    py: \"2\",\n    zIndex: \"0\",\n    letterSpacing: \"wide\",\n    color: \"gray.400\",\n    fontSize: \"xs\",\n    fontWeight: \"semibold\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    pointerEvents: \"none\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), \"Editable Example\");\n};\n\nfunction ReactLiveBlock(_ref) {\n  let {\n    editable,\n    rawCode\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"editable\", \"rawCode\"]);\n\n  const {\n    0: editorCode,\n    1: setEditorCode\n  } = useState(rawCode.trim());\n\n  const onChange = newCode => setEditorCode(newCode.trim());\n\n  const liveProviderProps = _objectSpread({\n    code: editorCode,\n    scope\n  }, rest);\n\n  return __jsx(LiveProvider, _extends({}, liveProviderProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), __jsx(LiveCodePreview, {\n    zIndex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), editable && __jsx(LiveError, {\n    style: liveErrorStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }\n  }));\n}\n\nexport default ReactLiveBlock;","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/codeblock/react-live-block.tsx"],"names":["Box","chakra","React","useState","LiveError","LivePreview","LiveProvider","scope","liveErrorStyle","LiveCodePreview","baseStyle","fontFamily","mt","p","borderWidth","borderRadius","EditableNotice","props","ReactLiveBlock","editable","rawCode","rest","editorCode","setEditorCode","trim","onChange","newCode","liveProviderProps","code"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAqBC,SAArB,EAAgCC,WAAhC,EAA6CC,YAA7C,QAAiE,YAAjE;AAGA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAA0BC,cAA1B,QAAgD,UAAhD;AAEA,MAAMC,eAAe,GAAGR,MAAM,CAACI,WAAD,EAAc;AAC1CK,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,MADH;AAETC,IAAAA,EAAE,EAAE,CAFK;AAGTC,IAAAA,CAAC,EAAE,CAHM;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTC,IAAAA,YAAY,EAAE;AALL;AAD+B,CAAd,CAA9B;;AAUA,MAAMC,cAAc,GAAIC,KAAD,IAAqB;AAC1C,SACE,MAAC,GAAD;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,GAAG,EAAC,SAHN;AAIE,IAAA,UAAU,EAAC,KAJb;AAKE,IAAA,EAAE,EAAC,SALL;AAME,IAAA,EAAE,EAAC,GANL;AAOE,IAAA,MAAM,EAAC,GAPT;AAQE,IAAA,aAAa,EAAC,MARhB;AASE,IAAA,KAAK,EAAC,UATR;AAUE,IAAA,QAAQ,EAAC,IAVX;AAWE,IAAA,UAAU,EAAC,UAXb;AAYE,IAAA,SAAS,EAAC,QAZZ;AAaE,IAAA,aAAa,EAAC,WAbhB;AAcE,IAAA,aAAa,EAAC;AAdhB,KAeMA,KAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF;AAqBD,CAtBD;;AAwBA,SAASC,cAAT,OAAwD;AAAA,MAAhC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAgC;AAAA,MAARC,IAAQ;;AACtD,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAACiB,OAAO,CAACI,IAAR,EAAD,CAA5C;;AACA,QAAMC,QAAQ,GAAIC,OAAD,IAAaH,aAAa,CAACG,OAAO,CAACF,IAAR,EAAD,CAA3C;;AACA,QAAMG,iBAAiB;AACrBC,IAAAA,IAAI,EAAEN,UADe;AAErBf,IAAAA;AAFqB,KAGlBc,IAHkB,CAAvB;;AAKA,SACE,MAAC,YAAD,eAAkBM,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,eAAD;AAAiB,IAAA,MAAM,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,QAAQ,IAAI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEX,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,CADF;AAMD;;AAED,eAAeU,cAAf","sourcesContent":["import { Box, BoxProps, chakra } from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { LiveEditor, LiveError, LivePreview, LiveProvider } from \"react-live\"\nimport CodeContainer from \"./code-container\"\nimport CopyButton from \"./copy-button\"\nimport scope from \"./react-live-scope\"\nimport { liveEditorStyle, liveErrorStyle } from \"./styles\"\n\nconst LiveCodePreview = chakra(LivePreview, {\n  baseStyle: {\n    fontFamily: \"body\",\n    mt: 5,\n    p: 3,\n    borderWidth: 1,\n    borderRadius: \"12px\",\n  },\n})\n\nconst EditableNotice = (props: BoxProps) => {\n  return (\n    <Box\n      position=\"absolute\"\n      width=\"full\"\n      top=\"-1.25em\"\n      roundedTop=\"8px\"\n      bg=\"#011627\"\n      py=\"2\"\n      zIndex=\"0\"\n      letterSpacing=\"wide\"\n      color=\"gray.400\"\n      fontSize=\"xs\"\n      fontWeight=\"semibold\"\n      textAlign=\"center\"\n      textTransform=\"uppercase\"\n      pointerEvents=\"none\"\n      {...props}\n    >\n      Editable Example\n    </Box>\n  )\n}\n\nfunction ReactLiveBlock({ editable, rawCode, ...rest }) {\n  const [editorCode, setEditorCode] = useState(rawCode.trim())\n  const onChange = (newCode) => setEditorCode(newCode.trim())\n  const liveProviderProps = {\n    code: editorCode,\n    scope,\n    ...rest,\n  }\n  return (\n    <LiveProvider {...liveProviderProps}>\n      <LiveCodePreview zIndex=\"1\" />\n      {editable && <LiveError style={liveErrorStyle} />}\n    </LiveProvider>\n  )\n}\n\nexport default ReactLiveBlock\n"]},"metadata":{},"sourceType":"module"}