{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as Chakra from \"@chakra-ui/react\";\nimport { ColorPalette, ColorPalettes, ColorWrapper } from \"components/color-palette\";\nimport { Anchor } from \"components/mdx-components/anchor\";\nimport { InlineCode } from \"components/mdx-components/inline-code\";\nimport { LinkedHeading } from \"components/mdx-components/linked-heading\";\nimport { Pre } from \"components/mdx-components/pre\";\nimport { Table, TData, THead } from \"components/mdx-components/table\";\nimport { VideoPlayer } from \"components/mdx-components/video-player\";\nimport * as React from \"react\";\nimport PropsTable from \"../props-table\";\nimport CarbonAd from \"./carbon-ad\";\nimport CodeBlock from \"./codeblock/codeblock\";\nimport ComponentLinks from \"./component-links\";\nimport IconsList from \"./icons-list\";\nconst {\n  Alert,\n  Box,\n  chakra,\n  Kbd\n} = Chakra;\nexport const MDXComponents = _objectSpread(_objectSpread({}, Chakra), {}, {\n  h1: props => __jsx(chakra.h1, _extends({\n    apply: \"mdx.h1\"\n  }, props)),\n  h2: props => __jsx(LinkedHeading, _extends({\n    apply: \"mdx.h2\"\n  }, props)),\n  h3: props => __jsx(LinkedHeading, _extends({\n    as: \"h3\",\n    apply: \"mdx.h3\"\n  }, props)),\n  h4: props => __jsx(LinkedHeading, _extends({\n    as: \"h4\",\n    apply: \"mdx.h4\"\n  }, props)),\n  hr: props => __jsx(chakra.hr, _extends({\n    apply: \"mdx.hr\"\n  }, props)),\n  strong: props => __jsx(Box, _extends({\n    as: \"strong\",\n    fontWeight: \"semibold\"\n  }, props)),\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: (_ref) => {\n    let {\n      reset\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"reset\"]);\n\n    return __jsx(Box, _extends({\n      as: reset ? \"br\" : undefined,\n      height: reset ? undefined : \"24px\"\n    }, props));\n  },\n  table: Table,\n  th: THead,\n  td: TData,\n  a: Anchor,\n  p: props => __jsx(chakra.p, _extends({\n    apply: \"mdx.p\"\n  }, props)),\n  ul: props => __jsx(chakra.ul, _extends({\n    apply: \"mdx.ul\"\n  }, props)),\n  ol: props => __jsx(chakra.ol, _extends({\n    apply: \"mdx.ul\"\n  }, props)),\n  li: props => __jsx(chakra.li, _extends({\n    pb: \"4px\"\n  }, props)),\n  blockquote: props => __jsx(Alert, _extends({\n    mt: \"4\",\n    role: \"none\",\n    status: \"warning\",\n    variant: \"left-accent\",\n    as: \"blockquote\",\n    rounded: \"4px\",\n    my: \"1.5rem\"\n  }, props)),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable,\n  VideoPlayer,\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper\n});","map":null,"metadata":{},"sourceType":"module"}