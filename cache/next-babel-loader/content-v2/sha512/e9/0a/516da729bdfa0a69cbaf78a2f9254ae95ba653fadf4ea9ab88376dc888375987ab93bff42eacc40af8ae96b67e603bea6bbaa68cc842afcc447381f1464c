{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as chakraComponents from \"@chakra-ui/react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXComponents } from \"components/mdx-components\";\nimport PageContainer from \"components/page-container\";\nimport Pagination from \"components/pagination\";\nimport Sidebar from \"components/sidebar/sidebar\";\nimport docsSidebar from \"configs/docs-sidebar.json\";\nimport * as React from \"react\";\nimport { findRouteByPath, removeFromLast } from \"utils/find-route-by-path\";\nimport { getRouteContext } from \"utils/get-route-context\";\nexport function getRoutes(slug) {\n  var _Object$entries$find, _sidebar$routes;\n\n  // for home page, use docs sidebat\n  if (slug === \"/\") return docsSidebar.routes;\n  var configMap = {\n    \"/changelog\": docsSidebar,\n    \"/docs\": docsSidebar\n  };\n\n  var _ref = (_Object$entries$find = Object.entries(configMap).find(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n        path = _ref4[0];\n\n    return slug.startsWith(path);\n  })) !== null && _Object$entries$find !== void 0 ? _Object$entries$find : [],\n      _ref2 = _slicedToArray(_ref, 2),\n      sidebar = _ref2[1];\n\n  return (_sidebar$routes = sidebar === null || sidebar === void 0 ? void 0 : sidebar.routes) !== null && _sidebar$routes !== void 0 ? _sidebar$routes : [];\n}\nexport function MDXLayoutProvider(_ref5) {\n  var children = _ref5.children;\n  return __jsx(MDXProvider, {\n    components: _objectSpread(_objectSpread({}, chakraComponents), MDXComponents)\n  }, children);\n}\nexport default function MDXLayout(props) {\n  var frontmatter = props.frontmatter,\n      children = props.children;\n  var routes = getRoutes(frontmatter.slug);\n  var route = findRouteByPath(removeFromLast(frontmatter.slug, \"#\"), routes);\n  var routeContext = getRouteContext(route, routes);\n  return __jsx(MDXLayoutProvider, null, __jsx(PageContainer, {\n    frontmatter: frontmatter,\n    sidebar: __jsx(Sidebar, {\n      routes: routes\n    }),\n    pagination: __jsx(Pagination, {\n      next: routeContext.nextRoute,\n      previous: routeContext.prevRoute\n    })\n  }, children));\n}","map":null,"metadata":{},"sourceType":"module"}