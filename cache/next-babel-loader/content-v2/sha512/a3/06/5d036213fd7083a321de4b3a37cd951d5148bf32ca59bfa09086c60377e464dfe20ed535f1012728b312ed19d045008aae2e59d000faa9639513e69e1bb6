{"ast":null,"code":"var _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/table-of-content.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport { useScrollSpy } from \"hooks/use-scrollspy\";\nimport { Box, ListItem, OrderedList, chakra, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction TableOfContent(props) {\n  const {\n    headings\n  } = props,\n        rest = _objectWithoutProperties(props, [\"headings\"]);\n\n  const activeId = useScrollSpy(headings.map(({\n    id\n  }) => `[id=\"${id}\"]`), {\n    rootMargin: \"0% 0% -24% 0%\"\n  });\n  return __jsx(Box, _extends({\n    as: \"nav\",\n    \"aria-labelledby\": \"toc-title\",\n    width: \"16rem\",\n    flexShrink: 0,\n    display: {\n      base: \"none\",\n      xl: \"block\"\n    },\n    position: \"sticky\",\n    py: \"10\",\n    pr: \"4\",\n    top: \"6rem\",\n    right: \"0\",\n    fontSize: \"sm\",\n    alignSelf: \"start\",\n    maxHeight: \"calc(100vh - 8rem)\",\n    overflowY: \"auto\",\n    sx: {\n      overscrollBehavior: \"contain\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), __jsx(Text, {\n    as: \"h2\",\n    id: \"toc-title\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    fontSize: \"xs\",\n    color: useColorModeValue(\"gray.700\", \"gray.400\"),\n    letterSpacing: \"wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"On this page\"), __jsx(OrderedList, {\n    spacing: 1,\n    ml: \"0\",\n    mt: \"4\",\n    styleType: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, headings.map(({\n    id,\n    text,\n    level\n  }) => __jsx(ListItem, {\n    key: id,\n    title: text,\n    ml: level === \"h3\" ? \"4\" : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(chakra.a, {\n    py: \"1\",\n    display: \"block\",\n    fontWeight: id === activeId ? \"bold\" : \"medium\",\n    href: `#${id}`,\n    \"aria-current\": id === activeId ? \"location\" : undefined,\n    color: useColorModeValue(\"gray.600\", \"white\"),\n    _hover: {\n      color: useColorModeValue(\"gray.900\", \"white\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, text)))));\n}\n\nexport default TableOfContent;","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/table-of-content.tsx"],"names":["React","useScrollSpy","Box","ListItem","OrderedList","chakra","Text","useColorModeValue","TableOfContent","props","headings","rest","activeId","map","id","rootMargin","base","xl","overscrollBehavior","text","level","undefined","color"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { useScrollSpy } from \"hooks/use-scrollspy\"\nimport {\n  Box,\n  ListItem,\n  OrderedList,\n  chakra,\n  Text,\n  useColorModeValue,\n  BoxProps,\n} from \"@chakra-ui/react\"\nimport { Heading } from \"components/page-container\"\n\ninterface TableOfContentProps extends BoxProps {\n  headings: Heading[]\n}\n\nfunction TableOfContent(props: TableOfContentProps) {\n  const { headings, ...rest } = props\n  const activeId = useScrollSpy(\n    headings.map(({ id }) => `[id=\"${id}\"]`),\n    {\n      rootMargin: \"0% 0% -24% 0%\",\n    },\n  )\n  return (\n    <Box\n      as=\"nav\"\n      aria-labelledby=\"toc-title\"\n      width=\"16rem\"\n      flexShrink={0}\n      display={{ base: \"none\", xl: \"block\" }}\n      position=\"sticky\"\n      py=\"10\"\n      pr=\"4\"\n      top=\"6rem\"\n      right=\"0\"\n      fontSize=\"sm\"\n      alignSelf=\"start\"\n      maxHeight=\"calc(100vh - 8rem)\"\n      overflowY=\"auto\"\n      sx={{ overscrollBehavior: \"contain\" }}\n      {...rest}\n    >\n      <Text\n        as=\"h2\"\n        id=\"toc-title\"\n        textTransform=\"uppercase\"\n        fontWeight=\"bold\"\n        fontSize=\"xs\"\n        color={useColorModeValue(\"gray.700\", \"gray.400\")}\n        letterSpacing=\"wide\"\n      >\n        On this page\n      </Text>\n      <OrderedList spacing={1} ml=\"0\" mt=\"4\" styleType=\"none\">\n        {headings.map(({ id, text, level }) => (\n          <ListItem key={id} title={text} ml={level === \"h3\" ? \"4\" : undefined}>\n            <chakra.a\n              py=\"1\"\n              display=\"block\"\n              fontWeight={id === activeId ? \"bold\" : \"medium\"}\n              href={`#${id}`}\n              aria-current={id === activeId ? \"location\" : undefined}\n              color={useColorModeValue(\"gray.600\", \"white\")}\n              _hover={{\n                color: useColorModeValue(\"gray.900\", \"white\"),\n              }}\n            >\n              {text}\n            </chakra.a>\n          </ListItem>\n        ))}\n      </OrderedList>\n    </Box>\n  )\n}\n\nexport default TableOfContent\n"]},"metadata":{},"sourceType":"module"}