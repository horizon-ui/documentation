{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport * as React from \"react\";\nimport sortBy from \"lodash/sortBy\";\nimport { Badge, Box, Center, chakra, Flex, List, ListItem, Stack, useColorModeValue } from \"@chakra-ui/react\";\nimport { convertBackticksToInlineCode } from \"utils/convert-backticks-to-inline-code\";\nimport SidebarCategory from \"./sidebar-category\";\nimport SidebarLink from \"./sidebar-link\";\nexport function SidebarContent(props) {\n  var routes = props.routes,\n      pathname = props.pathname,\n      contentRef = props.contentRef;\n  return __jsx(React.Fragment, null, routes.map(function (lvl1, idx) {\n    return __jsx(React.Fragment, {\n      key: idx\n    }, lvl1.heading && __jsx(chakra.h4, {\n      fontSize: \"sm\",\n      fontWeight: \"bold\",\n      my: \"1.25rem\",\n      textTransform: \"uppercase\",\n      letterSpacing: \"wider\",\n      color: useColorModeValue(\"gray.700\", \"inherit\")\n    }, lvl1.title), lvl1.routes.map(function (lvl2, index) {\n      if (!lvl2.routes) {\n        return __jsx(SidebarLink, {\n          ml: \"-3\",\n          mt: \"2\",\n          key: lvl2.path,\n          href: lvl2.path\n        }, lvl2.title);\n      }\n\n      var selected = pathname.startsWith(lvl2.path);\n      var opened = selected || lvl2.open;\n      var sortedRoutes = !!lvl2.sort ? sortBy(lvl2.routes, function (i) {\n        return i.title;\n      }) : lvl2.routes;\n      return __jsx(SidebarCategory, {\n        contentRef: contentRef,\n        key: lvl2.path + index,\n        title: lvl2.title,\n        selected: selected,\n        opened: opened\n      }, __jsx(Stack, {\n        as: \"ul\"\n      }, sortedRoutes.map(function (lvl3) {\n        return __jsx(SidebarLink, {\n          as: \"li\",\n          key: lvl3.path,\n          href: lvl3.path\n        }, __jsx(\"span\", null, convertBackticksToInlineCode(lvl3.title)), lvl3[\"new\"] && __jsx(Badge, {\n          ml: \"2\",\n          lineHeight: \"tall\",\n          fontSize: \"10px\",\n          variant: \"solid\",\n          color: \"white\",\n          borderRadius: \"4px\",\n          bg: useColorModeValue(\"brand.500\", \"brand.400\")\n        }, \"PRO\"));\n      })));\n    }));\n  }));\n}\n\nvar MainNavLink = function MainNavLink(_ref) {\n  var href = _ref.href,\n      icon = _ref.icon,\n      children = _ref.children;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var _href$split = href.split(\"/\"),\n      _href$split2 = _slicedToArray(_href$split, 2),\n      group = _href$split2[1];\n\n  var active = pathname.includes(group);\n  var linkColor = useColorModeValue(\"gray.900\", \"whiteAlpha.900\");\n  return __jsx(NextLink, {\n    href: href,\n    passHref: true\n  }, __jsx(Flex, {\n    display: \"none\",\n    as: \"a\",\n    align: \"center\",\n    fontSize: \"sm\",\n    fontWeight: \"semibold\",\n    transitionProperty: \"colors\",\n    transitionDuration: \"200ms\",\n    color: active ? linkColor : \"gray.500\",\n    _hover: {\n      color: linkColor\n    }\n  }, __jsx(Center, {\n    w: \"6\",\n    h: \"6\",\n    bg: \"brand.400\",\n    rounded: \"base\",\n    mr: \"3\"\n  }, icon), children));\n};\n\nvar mainNavLinks = [{\n  href: \"/docs/introduction\",\n  label: \"Docs\",\n  icon: \" \"\n}];\n\nvar MainNavLinkGroup = function MainNavLinkGroup(props) {\n  return __jsx(List, _extends({\n    spacing: \"4\",\n    styleType: \"none\"\n  }, props), mainNavLinks.map(function (item) {\n    return __jsx(ListItem, {\n      key: item.label\n    }, __jsx(MainNavLink, {\n      icon: item.icon,\n      href: item.href\n    }, item.label));\n  }));\n};\n\nvar Sidebar = function Sidebar(_ref2) {\n  var routes = _ref2.routes;\n\n  var _useRouter2 = useRouter(),\n      pathname = _useRouter2.pathname;\n\n  var ref = React.useRef(null);\n  return __jsx(Box, {\n    ref: ref,\n    as: \"nav\",\n    \"aria-label\": \"Main Navigation\",\n    pos: \"sticky\",\n    sx: {\n      overscrollBehavior: \"contain\"\n    },\n    top: \"6.5rem\",\n    w: \"280px\",\n    h: \"calc(100vh - 8.125rem)\",\n    pr: \"8\",\n    pb: \"6\",\n    pl: \"6\",\n    pt: \"4\",\n    overflowY: \"auto\",\n    className: \"sidebar-content\",\n    flexShrink: 0,\n    display: {\n      base: \"none\",\n      md: \"block\"\n    }\n  }, __jsx(MainNavLinkGroup, {\n    mb: \"10\"\n  }), __jsx(SidebarContent, {\n    routes: routes,\n    pathname: pathname,\n    contentRef: ref\n  }));\n};\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}