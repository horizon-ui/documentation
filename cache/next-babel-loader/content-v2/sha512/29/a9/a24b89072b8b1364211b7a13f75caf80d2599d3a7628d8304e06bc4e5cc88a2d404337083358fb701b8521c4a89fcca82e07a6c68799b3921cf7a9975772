{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/mdx-components.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Chakra from \"@chakra-ui/react\";\nimport { ColorPalette, ColorPalettes, ColorWrapper } from \"components/color-palette\";\nimport { Anchor } from \"components/mdx-components/anchor\";\nimport { InlineCode } from \"components/mdx-components/inline-code\";\nimport { LinkedHeading } from \"components/mdx-components/linked-heading\";\nimport { Pre } from \"components/mdx-components/pre\";\nimport { Table, TData, THead } from \"components/mdx-components/table\";\nimport { VideoPlayer } from \"components/mdx-components/video-player\";\nimport * as React from \"react\";\nimport PropsTable from \"../props-table\";\nimport CarbonAd from \"./carbon-ad\";\nimport CodeBlock from \"./codeblock/codeblock\";\nimport ComponentLinks from \"./component-links\";\nimport IconsList from \"./icons-list\";\nvar Alert = Chakra.Alert,\n    Box = Chakra.Box,\n    chakra = Chakra.chakra,\n    Kbd = Chakra.Kbd;\nexport var MDXComponents = _objectSpread(_objectSpread({}, Chakra), {}, {\n  h1: function h1(props) {\n    return __jsx(chakra.h1, _extends({\n      apply: \"mdx.h1\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }\n    }));\n  },\n  h2: function h2(props) {\n    return __jsx(LinkedHeading, _extends({\n      apply: \"mdx.h2\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }\n    }));\n  },\n  h3: function h3(props) {\n    return __jsx(LinkedHeading, _extends({\n      as: \"h3\",\n      apply: \"mdx.h3\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }\n    }));\n  },\n  h4: function h4(props) {\n    return __jsx(LinkedHeading, _extends({\n      as: \"h4\",\n      apply: \"mdx.h4\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }));\n  },\n  hr: function hr(props) {\n    return __jsx(chakra.hr, _extends({\n      apply: \"mdx.hr\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }\n    }));\n  },\n  strong: function strong(props) {\n    return __jsx(Box, _extends({\n      as: \"strong\",\n      fontWeight: \"semibold\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }\n    }));\n  },\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: function br(_ref) {\n    var reset = _ref.reset,\n        props = _objectWithoutProperties(_ref, [\"reset\"]);\n\n    return __jsx(Box, _extends({\n      as: reset ? \"br\" : undefined,\n      height: reset ? undefined : \"24px\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }));\n  },\n  table: Table,\n  th: THead,\n  td: TData,\n  a: Anchor,\n  p: function p(props) {\n    return __jsx(chakra.p, _extends({\n      apply: \"mdx.p\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  },\n  ul: function ul(props) {\n    return __jsx(chakra.ul, _extends({\n      apply: \"mdx.ul\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }\n    }));\n  },\n  ol: function ol(props) {\n    return __jsx(chakra.ol, _extends({\n      apply: \"mdx.ul\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }));\n  },\n  li: function li(props) {\n    return __jsx(chakra.li, _extends({\n      pb: \"4px\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }));\n  },\n  blockquote: function blockquote(props) {\n    return __jsx(Alert, _extends({\n      mt: \"4\",\n      role: \"none\",\n      status: \"warning\",\n      variant: \"left-accent\",\n      as: \"blockquote\",\n      rounded: \"4px\",\n      my: \"1.5rem\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }));\n  },\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks: ComponentLinks,\n  IconsList: IconsList,\n  PropsTable: PropsTable,\n  VideoPlayer: VideoPlayer,\n  ColorPalette: ColorPalette,\n  ColorPalettes: ColorPalettes,\n  ColorWrapper: ColorWrapper\n});","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/documentation/website/src/components/mdx-components/mdx-components.tsx"],"names":["Chakra","ColorPalette","ColorPalettes","ColorWrapper","Anchor","InlineCode","LinkedHeading","Pre","Table","TData","THead","VideoPlayer","React","PropsTable","CarbonAd","CodeBlock","ComponentLinks","IconsList","Alert","Box","chakra","Kbd","MDXComponents","h1","props","h2","h3","h4","hr","strong","inlineCode","code","pre","kbd","br","reset","undefined","table","th","td","a","p","ul","ol","li","blockquote"],"mappings":"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","sourcesContent":["import * as Chakra from \"@chakra-ui/react\"\nimport {\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper,\n} from \"components/color-palette\"\nimport { Anchor } from \"components/mdx-components/anchor\"\nimport { InlineCode } from \"components/mdx-components/inline-code\"\nimport { LinkedHeading } from \"components/mdx-components/linked-heading\"\nimport { Pre } from \"components/mdx-components/pre\"\nimport { Table, TData, THead } from \"components/mdx-components/table\"\nimport { VideoPlayer } from \"components/mdx-components/video-player\"\nimport * as React from \"react\"\nimport PropsTable from \"../props-table\"\nimport CarbonAd from \"./carbon-ad\"\nimport CodeBlock from \"./codeblock/codeblock\"\nimport ComponentLinks from \"./component-links\"\nimport IconsList from \"./icons-list\"\n\nconst { Alert, Box, chakra, Kbd } = Chakra\n\nexport const MDXComponents = {\n  ...Chakra,\n  h1: (props) => <chakra.h1 apply=\"mdx.h1\" {...props} />,\n  h2: (props) => <LinkedHeading apply=\"mdx.h2\" {...props} />,\n  h3: (props) => <LinkedHeading as=\"h3\" apply=\"mdx.h3\" {...props} />,\n  h4: (props) => <LinkedHeading as=\"h4\" apply=\"mdx.h4\" {...props} />,\n  hr: (props) => <chakra.hr apply=\"mdx.hr\" {...props} />,\n  strong: (props) => <Box as=\"strong\" fontWeight=\"semibold\" {...props} />,\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: ({ reset, ...props }) => (\n    <Box\n      as={reset ? \"br\" : undefined}\n      height={reset ? undefined : \"24px\"}\n      {...props}\n    />\n  ),\n  table: Table,\n  th: THead,\n  td: TData,\n  a: Anchor,\n  p: (props) => <chakra.p apply=\"mdx.p\" {...props} />,\n  ul: (props) => <chakra.ul apply=\"mdx.ul\" {...props} />,\n  ol: (props) => <chakra.ol apply=\"mdx.ul\" {...props} />,\n  li: (props) => <chakra.li pb=\"4px\" {...props} />,\n  blockquote: (props) => (\n    <Alert\n      mt=\"4\"\n      role=\"none\"\n      status=\"warning\"\n      variant=\"left-accent\"\n      as=\"blockquote\"\n      rounded=\"4px\"\n      my=\"1.5rem\"\n      {...props}\n    />\n  ),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable,\n  VideoPlayer,\n  ColorPalette,\n  ColorPalettes,\n  ColorWrapper,\n}\n"]},"metadata":{},"sourceType":"module"}