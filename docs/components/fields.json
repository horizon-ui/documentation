{"pageProps":{"mdxSource":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var s=(e,o,r)=>o in e?c(e,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[o]=r,a=(e,o)=>{for(var r in o||(o={}))i.call(o,r)&&s(e,r,o[r]);if(l)for(var r of l(o))n.call(o,r)&&s(e,r,o[r]);return e},d=(e,o)=>m(e,u(o));var p=(e,o)=>{var r={};for(var t in e)i.call(e,t)&&o.indexOf(t)<0&&(r[t]=e[t]);if(e!=null&&l)for(var t of l(e))o.indexOf(t)<0&&n.call(e,t)&&(r[t]=e[t]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var t=r,{components:e}=t,o=p(t,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",a({},{id:\"input-field\"}),\"Input Field\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`function InputField() {\n  return (\n    <Flex direction=\"column\" mb=\"30px\">\n      <FormLabel\n        display=\"flex\"\n        ms=\"10px\"\n        htmlFor=\"username\"\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n        _hover={{ cursor: \"pointer\" }}\n      >\n        Username\n      </FormLabel>\n      <Input\n        bg=\"transparent\"\n        border=\"1px solid\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        fontSize=\"sm\"\n        p=\"20px\"\n        id=\"username\"\n        fontWeight=\"500\"\n        variant=\"main\"\n        placeholder=\"@simmmple.web\"\n        _placeholder={{ fontWeight: \"400\", color: \"#A3AED0\" }}\n        h=\"44px\"\n        maxh=\"44px\"\n      />\n    </Flex>\n  )\n}\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`import InputField from \"components/fields/InputField\"\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<InputField\n  mb=\"0px\"\n  me=\"30px\"\n  id=\"username\"\n  label=\"Username\"\n  placeholder=\"@simmmple.web\"\n/>\n`)),mdx(\"hr\",null),mdx(\"h2\",a({},{id:\"switch-field\"}),\"Switch Field\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`function SwitchField() {\n  return (\n    <Flex direction=\"row\" justify=\"space-between\">\n      <Text\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n      >\n        Item update notifications\n      </Text>\n      <Switch colorScheme=\"brand\" size=\"md\" />\n    </Flex>\n  )\n}\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`import SwitchField from \"components/fields/SwitchField\"\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<SwitchField\n  isChecked={true}\n  reversed={true}\n  fontSize=\"sm\"\n  mb=\"20px\"\n  id=\"1\"\n  label=\"Item update notifications\"\n/>\n`)),mdx(\"hr\",null),mdx(\"h2\",a({},{id:\"text-field\"}),\"Text Field\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`function TextField() {\n  return (\n    <Flex direction=\"column\">\n      <FormLabel\n        display=\"flex\"\n        ms=\"10px\"\n        htmlFor=\"about\"\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n        _hover={{ cursor: \"pointer\" }}\n      >\n        About me\n      </FormLabel>\n      <Textarea\n        id=\"about\"\n        placeholder=\"Tell something about yourself in 150 characters!\"\n        h=\"44px\"\n        maxh=\"44px\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontSize=\"sm\"\n        bg=\"transparent\"\n        border=\"1px solid \"\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        _placeholder={{ color: \"#A3AED0\" }}\n      />\n    </Flex>\n  )\n}\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`import TextField from \"components/fields/TextField\"\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<TextField\n  id=\"about\"\n  label=\"About Me\"\n  placeholder=\"Tell something about yourself in 150 characters!\"\n/>\n`)),mdx(\"hr\",null),mdx(\"h2\",a({},{id:\"tags-field\"}),\"Tags Field\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`function TagsField(props) {\n  const { label, id, placeholderTags, ...rest } = props\n  let initialTags = [\n    {\n      name: \"chakra-ui\",\n      id: 1,\n    },\n    {\n      name: \"react\",\n      id: 2,\n    },\n    {\n      name: \"javascript\",\n      id: 3,\n    },\n  ]\n  if (placeholderTags) initialTags = placeholderTags\n  const [tags, setTags] = useState(initialTags)\n\n  const keyPress = (e) => {\n    if (e.keyCode === 13) {\n      setTags([\n        ...tags,\n        {\n          name: e.target.value,\n          id: tags.length === 0 ? 1 : tags[tags.length - 1].id + 1,\n        },\n      ])\n      e.target.value = \"\"\n    }\n  }\n\n  let borderColor = useColorModeValue(\"secondaryGray.100\", \"whiteAlpha.100\")\n  let bg = useColorModeValue(\"brand.500\", \"brand.400\")\n  return (\n    <Box>\n      <FormLabel htmlFor=\"description\" fontWeight=\"bold\" fontSize=\"sm\" mb=\"8px\">\n        Description\n      </FormLabel>\n      <Flex\n        direction=\"row\"\n        p=\"12px\"\n        wrap=\"wrap\"\n        bg=\"transparent\"\n        border=\"1px solid\"\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        minH=\"40px\"\n        h=\"stretch\"\n        cursor=\"text\"\n      >\n        {tags.map((tag, index) => {\n          return (\n            <Tag\n              fontSize=\"xs\"\n              h=\"25px\"\n              mb=\"6px\"\n              me=\"6px\"\n              borderRadius=\"12px\"\n              variant=\"solid\"\n              bg=\"brand.400\"\n              key=\"index\"\n            >\n              <TagLabel w=\"100%\">{tag.name}</TagLabel>\n              <TagCloseButton\n                justifySelf=\"flex-end\"\n                color=\"white\"\n                onClick={() =>\n                  setTags([...tags.filter((element) => element.id !== tag.id)])\n                }\n              />\n            </Tag>\n          )\n        })}\n        <Input\n          variant=\"main\"\n          bg=\"transparent\"\n          border=\"none\"\n          _focus=\"none\"\n          p=\"0px\"\n          onKeyDown={(e) => keyPress(e)}\n          fontSize=\"sm\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`import TagsField from \"components/fields/TagsField\"\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<TagsField\n  id=\"description\"\n  label=\"Description\"\n  placeholderTags={[\n    {\n      name: \"chair\",\n      id: 1,\n    },\n    {\n      name: \"furniture\",\n      id: 2,\n    },\n    {\n      name: \"elegant\",\n      id: 3,\n    },\n  ]}\n/>\n`)),mdx(\"hr\",null))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI Fields - Horizon UI","description":"Fields"}},"frontMatter":{"excerpt":"Input Field","readTimeMinutes":6,"mdxContent":"---\ntitle: Chakra UI Fields - Horizon UI\ndescription: Fields\n---\n\n## Input Field\n\n```jsx\nfunction InputField() {\n  return (\n    <Flex direction=\"column\" mb=\"30px\">\n      <FormLabel\n        display=\"flex\"\n        ms=\"10px\"\n        htmlFor=\"username\"\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n        _hover={{ cursor: \"pointer\" }}\n      >\n        Username\n      </FormLabel>\n      <Input\n        bg=\"transparent\"\n        border=\"1px solid\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        fontSize=\"sm\"\n        p=\"20px\"\n        id=\"username\"\n        fontWeight=\"500\"\n        variant=\"main\"\n        placeholder=\"@simmmple.web\"\n        _placeholder={{ fontWeight: \"400\", color: \"#A3AED0\" }}\n        h=\"44px\"\n        maxh=\"44px\"\n      />\n    </Flex>\n  )\n}\n```\n\n```tsx\nimport InputField from \"components/fields/InputField\"\n```\n\n```tsx\n<InputField\n  mb=\"0px\"\n  me=\"30px\"\n  id=\"username\"\n  label=\"Username\"\n  placeholder=\"@simmmple.web\"\n/>\n```\n\n---\n\n## Switch Field\n\n```jsx\nfunction SwitchField() {\n  return (\n    <Flex direction=\"row\" justify=\"space-between\">\n      <Text\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n      >\n        Item update notifications\n      </Text>\n      <Switch colorScheme=\"brand\" size=\"md\" />\n    </Flex>\n  )\n}\n```\n\n```tsx\nimport SwitchField from \"components/fields/SwitchField\"\n```\n\n```tsx\n<SwitchField\n  isChecked={true}\n  reversed={true}\n  fontSize=\"sm\"\n  mb=\"20px\"\n  id=\"1\"\n  label=\"Item update notifications\"\n/>\n```\n\n---\n\n## Text Field\n\n```jsx\nfunction TextField() {\n  return (\n    <Flex direction=\"column\">\n      <FormLabel\n        display=\"flex\"\n        ms=\"10px\"\n        htmlFor=\"about\"\n        fontSize=\"sm\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontWeight=\"bold\"\n        _hover={{ cursor: \"pointer\" }}\n      >\n        About me\n      </FormLabel>\n      <Textarea\n        id=\"about\"\n        placeholder=\"Tell something about yourself in 150 characters!\"\n        h=\"44px\"\n        maxh=\"44px\"\n        color={useColorModeValue(\"#1B2559\", \"white\")}\n        fontSize=\"sm\"\n        bg=\"transparent\"\n        border=\"1px solid \"\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        _placeholder={{ color: \"#A3AED0\" }}\n      />\n    </Flex>\n  )\n}\n```\n\n```tsx\nimport TextField from \"components/fields/TextField\"\n```\n\n```tsx\n<TextField\n  id=\"about\"\n  label=\"About Me\"\n  placeholder=\"Tell something about yourself in 150 characters!\"\n/>\n```\n\n---\n\n## Tags Field\n\n```jsx\nfunction TagsField(props) {\n  const { label, id, placeholderTags, ...rest } = props\n  let initialTags = [\n    {\n      name: \"chakra-ui\",\n      id: 1,\n    },\n    {\n      name: \"react\",\n      id: 2,\n    },\n    {\n      name: \"javascript\",\n      id: 3,\n    },\n  ]\n  if (placeholderTags) initialTags = placeholderTags\n  const [tags, setTags] = useState(initialTags)\n\n  const keyPress = (e) => {\n    if (e.keyCode === 13) {\n      setTags([\n        ...tags,\n        {\n          name: e.target.value,\n          id: tags.length === 0 ? 1 : tags[tags.length - 1].id + 1,\n        },\n      ])\n      e.target.value = \"\"\n    }\n  }\n\n  let borderColor = useColorModeValue(\"secondaryGray.100\", \"whiteAlpha.100\")\n  let bg = useColorModeValue(\"brand.500\", \"brand.400\")\n  return (\n    <Box>\n      <FormLabel htmlFor=\"description\" fontWeight=\"bold\" fontSize=\"sm\" mb=\"8px\">\n        Description\n      </FormLabel>\n      <Flex\n        direction=\"row\"\n        p=\"12px\"\n        wrap=\"wrap\"\n        bg=\"transparent\"\n        border=\"1px solid\"\n        borderColor={useColorModeValue(\"#E0E5F2\", \"whiteAlpha.100\")}\n        borderRadius=\"16px\"\n        minH=\"40px\"\n        h=\"stretch\"\n        cursor=\"text\"\n      >\n        {tags.map((tag, index) => {\n          return (\n            <Tag\n              fontSize=\"xs\"\n              h=\"25px\"\n              mb=\"6px\"\n              me=\"6px\"\n              borderRadius=\"12px\"\n              variant=\"solid\"\n              bg=\"brand.400\"\n              key=\"index\"\n            >\n              <TagLabel w=\"100%\">{tag.name}</TagLabel>\n              <TagCloseButton\n                justifySelf=\"flex-end\"\n                color=\"white\"\n                onClick={() =>\n                  setTags([...tags.filter((element) => element.id !== tag.id)])\n                }\n              />\n            </Tag>\n          )\n        })}\n        <Input\n          variant=\"main\"\n          bg=\"transparent\"\n          border=\"none\"\n          _focus=\"none\"\n          p=\"0px\"\n          onKeyDown={(e) => keyPress(e)}\n          fontSize=\"sm\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n```\n\n```tsx\nimport TagsField from \"components/fields/TagsField\"\n```\n\n```tsx\n<TagsField\n  id=\"description\"\n  label=\"Description\"\n  placeholderTags={[\n    {\n      name: \"chair\",\n      id: 1,\n    },\n    {\n      name: \"furniture\",\n      id: 2,\n    },\n    {\n      name: \"elegant\",\n      id: 3,\n    },\n  ]}\n/>\n```\n\n---\n","title":"Chakra UI Fields - Horizon UI","description":"Fields","slug":"/docs/components/fields","lastEdited":{"date":"April 17, 2022","author":"Simmmple"},"headings":[{"text":"Input Field","id":"input-field","level":"h2"},{"text":"Switch Field","id":"switch-field","level":"h2"},{"text":"Text Field","id":"text-field","level":"h2"},{"text":"Tags Field","id":"tags-field","level":"h2"}],"editUrl":"https://github.com/horizon-ui/horizon-ui-chakra/edit/main/website/pages/docs/components/fields.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}