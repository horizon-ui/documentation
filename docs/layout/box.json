{"pageProps":{"mdxSource":{"compiledSource":"var d=Object.defineProperty,c=Object.defineProperties;var x=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(e,o,t)=>o in e?d(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,r=(e,o)=>{for(var t in o||(o={}))n.call(o,t)&&s(e,t,o[t]);if(i)for(var t of i(o))p.call(o,t)&&s(e,t,o[t]);return e},l=(e,o)=>c(e,x(o));var m=(e,o)=>{var t={};for(var a in e)n.call(e,a)&&o.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&i)for(var a of i(e))o.indexOf(a)<0&&p.call(e,a)&&(t[a]=e[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:e}=a,o=m(a,[\"components\"]);return mdx(MDXLayout,l(r(r({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`Box is the most abstract component on top of which all other Horizon UI\nDashboard components are built. By default, it renders a `,mdx(\"inlineCode\",{parentName:\"p\"},\"div\"),\" element.\"),mdx(\"br\",null),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"The Box component is useful because it helps with 3 common use cases:\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Create responsive layouts with ease.\"),mdx(\"li\",{parentName:\"ul\"},\"Provide a shorthand way to pass styles via props (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bg\"),` instead of\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"backgroundColor\"),\").\"),mdx(\"li\",{parentName:\"ul\"},\"Compose new component and allow for override using the \",mdx(\"inlineCode\",{parentName:\"li\"},\"as\"),\" prop.\")),mdx(\"h2\",r({},{id:\"import\"}),\"Import\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-tsx\"}),`import { Box } from \"@chakra-ui/react\"\n`)),mdx(\"h2\",r({},{id:\"usage\"}),\"Usage\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\"}),`<Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n  This is the Box\n</Box>\n`)),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-tsx\"}),`<Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n  This is the Box\n</Box>\n`)),mdx(\"h3\",r({},{id:\"usage-1\"}),\"Usage\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\"}),`function Example() {\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image src={property.imageUrl} alt={property.imageAlt} />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"brand\">\n            New\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {property.beds} beds &bull; {property.baths} baths\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {property.title}\n        </Box>\n\n        <Box>\n          {property.formattedPrice}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            / wk\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < property.rating ? \"brand.500\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {property.reviewCount} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n`)),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-tsx\"}),`function Example() {\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image src={property.imageUrl} alt={property.imageAlt} />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"brand\">\n            New\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {property.beds} beds &bull; {property.baths} baths\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {property.title}\n        </Box>\n\n        <Box>\n          {property.formattedPrice}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            / wk\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < property.rating ? \"brand.500\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {property.reviewCount} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n`)),mdx(\"h3\",r({},{id:\"as-prop\"}),\"as prop\"),mdx(\"p\",null,\"You can use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"as\"),` prop to change the element render, just like\nstyled-components.`),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-jsx\"}),`<Box as=\"button\" borderRadius=\"md\" bg=\"tomato\" color=\"white\" px={4} h={8}>\n  Button\n</Box>\n`)),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-tsx\"}),`<Box as=\"button\" borderRadius=\"md\" bg=\"tomato\" color=\"white\" px={4} h={8}>\n  Button\n</Box>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI Box - Horizon UI","package":"@chakra-ui/layout","image":"components/box.svg","description":"Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element"}},"frontMatter":{"excerpt":"Box is the most abstract component on top of which all other Horizon UI","readTimeMinutes":5,"mdxContent":"---\ntitle: Chakra UI Box - Horizon UI\npackage: \"@chakra-ui/layout\"\nimage: \"components/box.svg\"\ndescription:\n  Box is the most abstract component on top of which all other Chakra UI\n  components are built. By default, it renders a `div` element\n---\n\nBox is the most abstract component on top of which all other Horizon UI\nDashboard components are built. By default, it renders a `div` element.\n\n<br />\n\n**The Box component is useful because it helps with 3 common use cases:**\n\n- Create responsive layouts with ease.\n- Provide a shorthand way to pass styles via props (`bg` instead of\n  `backgroundColor`).\n- Compose new component and allow for override using the `as` prop.\n\n## Import\n\n```tsx\nimport { Box } from \"@chakra-ui/react\"\n```\n\n## Usage\n\n```jsx\n<Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n  This is the Box\n</Box>\n```\n\n```tsx\n<Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n  This is the Box\n</Box>\n```\n\n### Usage\n\n```jsx\nfunction Example() {\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image src={property.imageUrl} alt={property.imageAlt} />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"brand\">\n            New\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {property.beds} beds &bull; {property.baths} baths\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {property.title}\n        </Box>\n\n        <Box>\n          {property.formattedPrice}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            / wk\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < property.rating ? \"brand.500\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {property.reviewCount} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n```\n\n```tsx\nfunction Example() {\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image src={property.imageUrl} alt={property.imageAlt} />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"brand\">\n            New\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {property.beds} beds &bull; {property.baths} baths\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {property.title}\n        </Box>\n\n        <Box>\n          {property.formattedPrice}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            / wk\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < property.rating ? \"brand.500\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {property.reviewCount} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n```\n\n### as prop\n\nYou can use the `as` prop to change the element render, just like\nstyled-components.\n\n```jsx\n<Box as=\"button\" borderRadius=\"md\" bg=\"tomato\" color=\"white\" px={4} h={8}>\n  Button\n</Box>\n```\n\n```tsx\n<Box as=\"button\" borderRadius=\"md\" bg=\"tomato\" color=\"white\" px={4} h={8}>\n  Button\n</Box>\n```\n","title":"Chakra UI Box - Horizon UI","package":"@chakra-ui/layout","image":"components/box.svg","description":"Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element","slug":"/docs/layout/box","lastEdited":{"date":"April 02, 2022","author":"Simmmple"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Usage","id":"usage","level":"h2"},{"text":"Usage","id":"usage","level":"h3"},{"text":"as prop","id":"as-prop","level":"h3"}],"editUrl":"https://github.com/horizon-ui/horizon-ui-chakra/edit/main/website/pages/docs/layout/box.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}