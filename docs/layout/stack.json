{"pageProps":{"mdxSource":{"compiledSource":"var l=Object.defineProperty,u=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(t,a,o)=>a in t?l(t,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[a]=o,e=(t,a)=>{for(var o in a||(a={}))r.call(a,o)&&p(t,o,a[o]);if(i)for(var o of i(a))s.call(a,o)&&p(t,o,a[o]);return t},c=(t,a)=>u(t,m(a));var d=(t,a)=>{var o={};for(var n in t)r.call(t,n)&&a.indexOf(n)<0&&(o[n]=t[n]);if(t!=null&&i)for(var n of i(t))a.indexOf(n)<0&&s.call(t,n)&&(o[n]=t[n]);return o};const makeShortcode=t=>function(o){return console.warn(\"Component \"+t+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},o))},PropsTable=makeShortcode(\"PropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:t}=n,a=d(n,[\"components\"]);return mdx(MDXLayout,c(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`Stack is a layout component that makes it easy to stack elements together and\napply a space between them. It uses a modified version of the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/\"}),\"CSS lobotomized owl selector\"),`\nto add spacing between its children.`),mdx(\"h2\",e({},{id:\"import\"}),\"Import\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`import { Stack, HStack, VStack } from \"@chakra-ui/react\"\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Stack:\"),` Used to add spacing between elements in the horizontal or vertical\ndirection. It supports responsive values.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"HStack:\"),` Used to add spacing between elements in horizontal direction, and\ncenters them.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"VStack:\"),` Used to add spacing between elements in vertical direction only,\nand centers them.`)),mdx(\"h2\",e({},{id:\"usage\"}),\"Usage\"),mdx(\"p\",null,\"To stack elements in horizontal or vertical direction only, use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"HStack\"),` or\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"VStack\"),\" components. You can also use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Stack\"),` component as well and pass the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"direction\"),\" prop.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<HStack spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</HStack>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<HStack spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</HStack>\n`)),mdx(\"h3\",e({},{id:\"responsive-direction\"}),\"Responsive direction\"),mdx(\"p\",null,\"You can pass responsive values to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Stack\"),` component to change stack\ndirection and/or spacing between elements.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<Stack direction={[\"column\", \"row\"]} spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</Stack>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<Stack direction={[\"column\", \"row\"]} spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</Stack>\n`)),mdx(\"h3\",e({},{id:\"adding-dividers\"}),\"Adding dividers\"),mdx(\"p\",null,`In some scenarios, you may want to add dividers between stacked elements. Pass\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},\"divider\"),\" prop and set its value to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"StackDivider\"),` or any custom React\nelement.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\"}),`<VStack\n  divider={<StackDivider borderColor=\"gray.200\" />}\n  spacing={4}\n  align=\"stretch\"\n>\n  <Box h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</VStack>\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`<VStack\n  divider={<StackDivider borderColor=\"gray.200\" />}\n  spacing={4}\n  align=\"stretch\"\n>\n  <Box h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</VStack>\n`)),mdx(\"h3\",e({},{id:\"example\"}),\"Example\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"manual=true\",manual:\"true\"}),`function Feature({ title, desc, ...rest }) {\n  return (\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <Stack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings on your own terms with our completely automated process\"\n      />\n    </Stack>\n  )\n}\n\nrender(<StackEx />)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"manual=true\",manual:\"true\"}),`function Feature({ title, desc, ...rest }) {\n  return (\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <Stack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum,\n        grow your savings on your own terms with our completely automated process\"\n      />\n    </Stack>\n  )\n}\n\nrender(<StackEx />)\n`)),mdx(\"h3\",e({},{id:\"stack-items-horizontally\"}),\"Stack items horizontally\"),mdx(\"p\",null,\"Pass the \",mdx(\"inlineCode\",{parentName:\"p\"},\"direction\"),\" and set it to \",mdx(\"inlineCode\",{parentName:\"p\"},\"row\"),\". Optionally, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"align\"),` and\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"justify\"),\" to adjust the alignment and distribution of the items.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"manual=true\",manual:\"true\"}),`function Feature({ title, desc, ...rest }) {\n  return (\n    <Box\n      p={5}\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      flex=\"1\"\n      borderRadius=\"md\"\n      {...rest}\n    >\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <HStack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings.\"\n      />\n    </HStack>\n  )\n}\n\nrender(<StackEx />)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"manual=true\",manual:\"true\"}),`function Feature({ title, desc, ...rest }) {\n  return (\n    <Box\n      p={5}\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      flex=\"1\"\n      borderRadius=\"md\"\n      {...rest}\n    >\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <HStack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings.\"\n      />\n    </HStack>\n  )\n}\n\nrender(<StackEx />)\n`)),mdx(\"h3\",e({},{id:\"notes-on-stack-vs-flex\"}),\"Notes on Stack vs Flex\"),mdx(\"p\",null,`Stack's primary use case is to lay items out and control the spacing between\neach item. If you have a more complicated use case, such as changing the margin\non the last child, you can combine `,mdx(\"inlineCode\",{parentName:\"p\"},\"Stack\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"Flex\"),` and use\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"justify-content: space-between\"),\" for more control of the layout.\"),mdx(\"h2\",e({},{id:\"props\"}),\"Props\"),mdx(PropsTable,{of:\"Stack\",mdxType:\"PropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Chakra UI Stack - Horizon UI","package":"@chakra-ui/layout","image":"components/stack.svg","description":"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them."}},"frontMatter":{"excerpt":"Stack is a layout component that makes it easy to stack elements together and","readTimeMinutes":5,"mdxContent":"---\ntitle: Chakra UI Stack - Horizon UI\npackage: \"@chakra-ui/layout\"\nimage: \"components/stack.svg\"\ndescription:\n  Stack is a layout utility component that makes it easy to stack elements\n  together and apply a space between them.\n---\n\nStack is a layout component that makes it easy to stack elements together and\napply a space between them. It uses a modified version of the\n[CSS lobotomized owl selector](https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/)\nto add spacing between its children.\n\n## Import\n\n```tsx\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\"\n```\n\n- **Stack:** Used to add spacing between elements in the horizontal or vertical\n  direction. It supports responsive values.\n- **HStack:** Used to add spacing between elements in horizontal direction, and\n  centers them.\n- **VStack:** Used to add spacing between elements in vertical direction only,\n  and centers them.\n\n## Usage\n\nTo stack elements in horizontal or vertical direction only, use the `HStack` or\n`VStack` components. You can also use the `Stack` component as well and pass the\n`direction` prop.\n\n```jsx\n<HStack spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</HStack>\n```\n\n```tsx\n<HStack spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</HStack>\n```\n\n### Responsive direction\n\nYou can pass responsive values to the `Stack` component to change stack\ndirection and/or spacing between elements.\n\n```jsx\n<Stack direction={[\"column\", \"row\"]} spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</Stack>\n```\n\n```tsx\n<Stack direction={[\"column\", \"row\"]} spacing=\"24px\">\n  <Box w=\"40px\" h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box w=\"40px\" h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</Stack>\n```\n\n### Adding dividers\n\nIn some scenarios, you may want to add dividers between stacked elements. Pass\nthe `divider` prop and set its value to the `StackDivider` or any custom React\nelement.\n\n```jsx\n<VStack\n  divider={<StackDivider borderColor=\"gray.200\" />}\n  spacing={4}\n  align=\"stretch\"\n>\n  <Box h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</VStack>\n```\n\n```tsx\n<VStack\n  divider={<StackDivider borderColor=\"gray.200\" />}\n  spacing={4}\n  align=\"stretch\"\n>\n  <Box h=\"40px\" bg=\"yellow.200\">\n    1\n  </Box>\n  <Box h=\"40px\" bg=\"tomato\">\n    2\n  </Box>\n  <Box h=\"40px\" bg=\"pink.100\">\n    3\n  </Box>\n</VStack>\n```\n\n### Example\n\n```jsx manual=true\nfunction Feature({ title, desc, ...rest }) {\n  return (\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <Stack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings on your own terms with our completely automated process\"\n      />\n    </Stack>\n  )\n}\n\nrender(<StackEx />)\n```\n\n```tsx manual=true\nfunction Feature({ title, desc, ...rest }) {\n  return (\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <Stack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum,\n        grow your savings on your own terms with our completely automated process\"\n      />\n    </Stack>\n  )\n}\n\nrender(<StackEx />)\n```\n\n### Stack items horizontally\n\nPass the `direction` and set it to `row`. Optionally, you can use `align` and\n`justify` to adjust the alignment and distribution of the items.\n\n```jsx manual=true\nfunction Feature({ title, desc, ...rest }) {\n  return (\n    <Box\n      p={5}\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      flex=\"1\"\n      borderRadius=\"md\"\n      {...rest}\n    >\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <HStack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings.\"\n      />\n    </HStack>\n  )\n}\n\nrender(<StackEx />)\n```\n\n```tsx manual=true\nfunction Feature({ title, desc, ...rest }) {\n  return (\n    <Box\n      p={5}\n      shadow=\"md\"\n      borderWidth=\"1px\"\n      flex=\"1\"\n      borderRadius=\"md\"\n      {...rest}\n    >\n      <Heading fontSize=\"xl\">{title}</Heading>\n      <Text mt={4}>{desc}</Text>\n    </Box>\n  )\n}\n\nfunction StackEx() {\n  return (\n    <HStack spacing={8}>\n      <Feature\n        title=\"Plan Money\"\n        desc=\"The future can be even brighter but a goal without a plan is just a wish\"\n      />\n      <Feature\n        title=\"Save Money\"\n        desc=\"You deserve good things. With a whooping 10-15% interest rate per annum, grow your savings.\"\n      />\n    </HStack>\n  )\n}\n\nrender(<StackEx />)\n```\n\n### Notes on Stack vs Flex\n\nStack's primary use case is to lay items out and control the spacing between\neach item. If you have a more complicated use case, such as changing the margin\non the last child, you can combine `Stack` and `Flex` and use\n`justify-content: space-between` for more control of the layout.\n\n## Props\n\n<PropsTable of=\"Stack\" />\n","title":"Chakra UI Stack - Horizon UI","package":"@chakra-ui/layout","image":"components/stack.svg","description":"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.","slug":"/docs/layout/stack","lastEdited":{"date":"April 02, 2022","author":"Simmmple"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Usage","id":"usage","level":"h2"},{"text":"Responsive direction","id":"responsive-direction","level":"h3"},{"text":"Adding dividers","id":"adding-dividers","level":"h3"},{"text":"Example","id":"example","level":"h3"},{"text":"Stack items horizontally","id":"stack-items-horizontally","level":"h3"},{"text":"Notes on Stack vs Flex","id":"notes-on-stack-vs-flex","level":"h3"},{"text":"Props","id":"props","level":"h2"}],"editUrl":"https://github.com/horizon-ui/horizon-ui-chakra/edit/main/website/pages/docs/layout/stack.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}